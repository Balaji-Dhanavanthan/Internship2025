{
	"name": "DF_SCD1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "empS"
				},
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "empt"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "split1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Employee_ID as short,",
				"          First_Name as string,",
				"          Last_Name as string,",
				"          Salary as integer,",
				"          Created_date as string,",
				"          Update_date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> empS",
				"source(output(",
				"          Employee_ID as string,",
				"          First_Name as string,",
				"          Last_Name as string,",
				"          Salary as string,",
				"          Created_date as string,",
				"          Update_date as string,",
				"          created_by as string,",
				"          created_at as string,",
				"          modified_by as string,",
				"          modified_at as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> empt",
				"derivedColumn1 select(mapColumn(",
				"          Employee_ID_tgt = Employee_ID,",
				"          First_Name_tgt = First_Name,",
				"          Last_Name_tgt = Last_Name,",
				"          Salary_tgt = Salary,",
				"          Created_date,",
				"          Update_date,",
				"          created_by,",
				"          created_at,",
				"          modified_by,",
				"          modified_at",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"empS, empt lookup(empS@Employee_ID == toInteger(empt@Employee_ID),",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 split(empS@Employee_ID != toInteger(empt@Employee_ID),",
				"     empS@Employee_ID == toInteger(empt@Employee_ID) && (empS@First_Name != empt@First_Name || empS@Last_Name != empt@Last_Name || empS@Salary != toInteger(empt@Salary)),",
				"     disjoint: false) ~> split1@(INSERT, UPDATE)",
				"split1@INSERT filter(isNull(split1@INSERT@Employee_ID)) ~> filter1",
				"empt derive(created_by = 'aabidh',",
				"          created_at = currentTimestamp(),",
				"          modified_by = 'aabidh',",
				"          modified_at = currentTimestamp()) ~> derivedColumn1",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Prop_0 as string,",
				"          match_id as string,",
				"          date as string,",
				"          match_type as string,",
				"          event_name as string,",
				"          innings as string,",
				"          batting_team as string,",
				"          bowling_team as string,",
				"          over as string,",
				"          ball as string,",
				"          ball_no as string,",
				"          batter as string,",
				"          bat_pos as string,",
				"          runs_batter as string,",
				"          balls_faced as string,",
				"          bowler as string,",
				"          valid_ball as string,",
				"          runs_extras as string,",
				"          runs_total as string,",
				"          runs_bowler as string,",
				"          runs_not_boundary as string,",
				"          extra_type as string,",
				"          non_striker as string,",
				"          non_striker_pos as string,",
				"          wicket_kind as string,",
				"          player_out as string,",
				"          fielders as string,",
				"          runs_target as string,",
				"          review_batter as string,",
				"          team_reviewed as string,",
				"          review_decision as string,",
				"          umpire as string,",
				"          umpires_call as string,",
				"          player_of_match as string,",
				"          match_won_by as string,",
				"          win_outcome as string,",
				"          toss_winner as string,",
				"          toss_decision as string,",
				"          venue as string,",
				"          city as string,",
				"          day as string,",
				"          month as string,",
				"          year as string,",
				"          season as string,",
				"          gender as string,",
				"          team_type as string,",
				"          superover_winner as string,",
				"          result_type as string,",
				"          method as string,",
				"          balls_per_over as string,",
				"          overs as string,",
				"          event_match_no as string,",
				"          stage as string,",
				"          match_number as string,",
				"          team_runs as string,",
				"          team_balls as string,",
				"          team_wicket as string,",
				"          new_batter as string,",
				"          batter_runs as string,",
				"          batter_balls as string,",
				"          bowler_wicket as string,",
				"          batting_partners as string,",
				"          next_batter as string,",
				"          striker_out as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1",
				"split1@UPDATE sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Employee_ID = split1@UPDATE@Employee_ID,",
				"          First_Name = split1@UPDATE@First_Name,",
				"          Last_Name = split1@UPDATE@Last_Name,",
				"          Salary = split1@UPDATE@Salary,",
				"          Created_date = split1@UPDATE@Created_date,",
				"          Update_date = split1@UPDATE@Update_date,",
				"          Employee_ID = split1@UPDATE@Employee_ID,",
				"          First_Name = split1@UPDATE@First_Name,",
				"          Last_Name = split1@UPDATE@Last_Name,",
				"          Salary = split1@UPDATE@Salary,",
				"          Created_date = split1@UPDATE@Created_date,",
				"          Update_date = split1@UPDATE@Update_date,",
				"          created_by,",
				"          created_at,",
				"          modified_by,",
				"          modified_at",
				"     )) ~> sink2"
			]
		}
	}
}