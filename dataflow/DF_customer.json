{
	"name": "DF_customer",
	"properties": {
		"folder": {
			"name": "I2025_MSyed"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Blob_copy1",
						"type": "DatasetReference"
					},
					"name": "ADLSscorce"
				},
				{
					"dataset": {
						"referenceName": "DS_Blob1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Blob_copy1",
						"type": "DatasetReference"
					},
					"name": "oxfordcitydetail",
					"rejectedDataLinkedService": {
						"referenceName": "DS_Blob_storgare",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "join1"
				},
				{
					"name": "Oxford"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country_id as string,",
				"          country_name as string,",
				"          region_id as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ADLSscorce",
				"source(output(",
				"          location_id as short,",
				"          street_address as string,",
				"          postal_code as string,",
				"          city as string,",
				"          state_province as string,",
				"          country_id as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"ADLSscorce select(mapColumn(",
				"          country_id,",
				"          country_name,",
				"          region_id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"source1 select(mapColumn(",
				"          location_id,",
				"          street_address,",
				"          postal_code,",
				"          city,",
				"          state_province,",
				"          country_id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"source1, select2 join(source1@country_id == select2@country_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 filter(select2@city=='Oxford') ~> Oxford",
				"Oxford derive(postal_code = iif(isNull(source1@postal_code), 'Unknown', toString(source1@postal_code)),",
				"          state_province = iif(isNull(source1@state_province), 'Unknown', toString(source1@state_province))) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Prop_0 as string,",
				"          match_id as string,",
				"          date as string,",
				"          match_type as string,",
				"          event_name as string,",
				"          innings as string,",
				"          batting_team as string,",
				"          bowling_team as string,",
				"          over as string,",
				"          ball as string,",
				"          ball_no as string,",
				"          batter as string,",
				"          bat_pos as string,",
				"          runs_batter as string,",
				"          balls_faced as string,",
				"          bowler as string,",
				"          valid_ball as string,",
				"          runs_extras as string,",
				"          runs_total as string,",
				"          runs_bowler as string,",
				"          runs_not_boundary as string,",
				"          extra_type as string,",
				"          non_striker as string,",
				"          non_striker_pos as string,",
				"          wicket_kind as string,",
				"          player_out as string,",
				"          fielders as string,",
				"          runs_target as string,",
				"          review_batter as string,",
				"          team_reviewed as string,",
				"          review_decision as string,",
				"          umpire as string,",
				"          umpires_call as string,",
				"          player_of_match as string,",
				"          match_won_by as string,",
				"          win_outcome as string,",
				"          toss_winner as string,",
				"          toss_decision as string,",
				"          venue as string,",
				"          city as string,",
				"          day as string,",
				"          month as string,",
				"          year as string,",
				"          season as string,",
				"          gender as string,",
				"          team_type as string,",
				"          superover_winner as string,",
				"          result_type as string,",
				"          method as string,",
				"          balls_per_over as string,",
				"          overs as string,",
				"          event_match_no as string,",
				"          stage as string,",
				"          match_number as string,",
				"          team_runs as string,",
				"          team_balls as string,",
				"          team_wicket as string,",
				"          new_batter as string,",
				"          batter_runs as string,",
				"          batter_balls as string,",
				"          bowler_wicket as string,",
				"          batting_partners as string,",
				"          next_batter as string,",
				"          striker_out as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> oxfordcitydetail"
			]
		}
	}
}