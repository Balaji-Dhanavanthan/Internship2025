{
	"name": "df_scdtype_01",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Blob3",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DS_Blob2",
						"type": "DatasetReference"
					},
					"name": "Employeestgt"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_SQL_Countries",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "DS_Blob_storgare",
						"type": "LinkedServiceReference"
					}
				},
				{
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "alterRow1"
				},
				{
					"name": "alterRow2"
				},
				{
					"name": "NullHandling"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "MergeSTT"
				}
			],
			"scriptLines": [
				"source(output(",
				"          employee_id as short,",
				"          first_name as string,",
				"          last_name as string,",
				"          email as string,",
				"          phone_number as string,",
				"          hire_date as string,",
				"          job_id as string,",
				"          salary as double,",
				"          commission as string,",
				"          manager_id as short,",
				"          department_id as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          employee_id as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          email as string,",
				"          phone_number as string,",
				"          hire_date as string,",
				"          job_id as string,",
				"          salary as string,",
				"          manager_id as string,",
				"          department_id as string,",
				"          created_date as string,",
				"          created_by as string,",
				"          modified_date as string,",
				"          modified_by as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Employeestgt",
				"surrogateKey1 join(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"derivedColumn4 alterRow(updateIf(1==1)) ~> alterRow1",
				"derivedColumn3 alterRow(insertIf(1==1)) ~> alterRow2",
				"MergeSTT derive(each(match(type == 'string'), $$ = iifNull($$, 'UNK', $$)),",
				"          each(match(type == 'double'), $$ = iifNull($$, 0.00, $$)),",
				"          each(match(type == 'integer'), $$ = iifNull($$, 0, $$))) ~> NullHandling",
				"NullHandling keyGenerate(output({undefined} as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"join1 derive() ~> derivedColumn3",
				"join1 derive() ~> derivedColumn4",
				"source1, Employeestgt join(source1@employee_id == ERROR_FUNCTION(''),",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> MergeSTT",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          country_id as decimal(6,0),",
				"          country_name as string,",
				"          region_id as decimal(6,0)",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1",
				"alterRow2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2"
			]
		}
	}
}