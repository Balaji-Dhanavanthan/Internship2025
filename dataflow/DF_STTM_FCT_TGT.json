{
	"name": "DF_STTM_FCT_TGT",
	"properties": {
		"folder": {
			"name": "TDSG_ADF_DataFlow"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "SrcPtnt"
				},
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "SrcYears"
				},
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "SrcPhrmcy"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "PtntDerived"
				},
				{
					"name": "PhrmcyDerived"
				},
				{
					"name": "SrcPintJoinSrcPhrmcy"
				},
				{
					"name": "JoinSrcYears"
				},
				{
					"name": "Trnsformation"
				},
				{
					"name": "NullHandling"
				},
				{
					"name": "PTNTCOPAYAMT"
				},
				{
					"name": "filter1"
				},
				{
					"name": "StringNullHandling"
				},
				{
					"name": "ChangingName"
				},
				{
					"name": "SLSTAXAMT"
				},
				{
					"name": "DctamtTransform"
				},
				{
					"name": "SelectingColumn"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          DOC_ID as string,",
				"          DOC_VER as string,",
				"          SFTWR_VENDR as string,",
				"          PHRMCY_NCPDP_ID as string,",
				"          PHRMCY_NAT_PROV_ID_NBR as string,",
				"          PTNT_CD as string,",
				"          PTNT_YR_OF_BRTH as string,",
				"          PTNT_GNDR as string,",
				"          PTNT_ZIP_CD as string,",
				"          PTNT_LANG_CD as string,",
				"          PTNT_LOC_CD as string,",
				"          NURSING_HOME_FAC_NM as string,",
				"          RX_ENROLL_IN_AUTOFILL as string,",
				"          RX_ENROLL_IN_RFIL as string,",
				"          RX_ENROLL_IN_CNTR_FILL as string,",
				"          PSCB_NPI as string,",
				"          PSCB_DEA_ID as string,",
				"          PSCB_ST_LIC_ID as string,",
				"          PSCB_LAST_NM as string,",
				"          PSCB_FIRST_NM as string,",
				"          OUT_PSCB_ZIP_CD as string,",
				"          RX_NBR as string,",
				"          TRANS_NBR as string,",
				"          RX_TYP as string,",
				"          DT_WRT as string,",
				"          DT_FILL as string,",
				"          TM_FILL as string,",
				"          OUT_MTRC_DSPN_QTY as string,",
				"          DAY_SPLY as string,",
				"          FILL_NBR as string,",
				"          RFIL_ORIGLY_AUTH as string,",
				"          RFIL_RMN as string,",
				"          DAW_CD as string,",
				"          OUT_INV_QTY_AFT_FILL as string,",
				"          PRC_OVRD as string,",
				"          DLV as string,",
				"          CMPND_IND as string,",
				"          PROD_ID as string,",
				"          RX_ORIG_IND as string,",
				"          PMT_TYP as string,",
				"          BAS_OF_INGRD_CST_REIMB as string,",
				"          REIMB_AMT as string,",
				"          COPAY_AMT as string,",
				"          INGRD_CST_AMT as string,",
				"          OUT_TOT_AMT_PD_BY_PTNT as string,",
				"          TOT_RX_PRC_COLL as string,",
				"          OUT_DSPN_FEE_PD as string,",
				"          COGS_AMT as string,",
				"          USUAL_AND_CSTMARY as string,",
				"          OUT_AWP_AMT as string,",
				"          OUT_DCT_AMT as string,",
				"          OUT_SLS_TAX as string,",
				"          PTY3_BIN as string,",
				"          PTY3_PCN as string,",
				"          PLN_ID as string,",
				"          GRP_ID as string,",
				"          NTWK_REIMB_ID as string,",
				"          PAYR_ID_QLFY as string,",
				"          PAYR_ID as string,",
				"          PTY3_CLM_REF_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SrcPtnt",
				"source(output(",
				"          YEAR_ID as string,",
				"          YEAR_DESC as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SrcYears",
				"source(output(",
				"          PHRMCY_NAT_PROV_ID_NBR as string,",
				"          PHRMCY_NCPDP_NBR as string,",
				"          PTNT_CD as string,",
				"          PSCB_FIRST_NM as string,",
				"          PSCB_LAST_NM as string,",
				"          LANG_CD as string,",
				"          DEAL_ID as string,",
				"          PHRMCY_NM as string,",
				"          PHRMCY_ST_ADDR_LINE1_TXT as string,",
				"          PHRMCY_ADDR_ZIP_CD as string,",
				"          PHRMCY_ADDR_CITY_NM as string,",
				"          PHRMCY_ADDR_ST_CD as string,",
				"          PHRMCY_ADDR_ST_NAME as string,",
				"          PHRMCY_ADDR_ZNE_CD as string,",
				"          PHRMCY_ADDR_ZNE_NM as string,",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SrcPhrmcy",
				"SrcPtnt derive(each(match(type=='string'), $$ = iif($$ == 'NULL' , toString(null()),$$))) ~> PtntDerived",
				"SrcPhrmcy derive(each(match(type=='string'), $$ = iif($$ == 'NULL' , toString(null()),$$))) ~> PhrmcyDerived",
				"PtntDerived, PhrmcyDerived join(PtntDerived@PTNT_CD == PhrmcyDerived@PTNT_CD,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> SrcPintJoinSrcPhrmcy",
				"SrcPintJoinSrcPhrmcy, filter1 join(PTNT_YR_OF_BRTH == YEAR_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinSrcYears",
				"StringNullHandling derive(TRANS_NBR = iif(isNull(TRANS_NBR), -1 , toInteger(TRANS_NBR)),",
				"          PTNT_CD = iif(isNull(PTNT_CD), 'UNK', right(PTNT_CD, 4)),",
				"          PTNT_NM = iif(isNull(PHRMCY_NM),'UNK',replace(  replace(    replace(      replace(PHRMCY_NM, '-', ' '),      '&', ' '    ),    ',', ' '  ),  '\\'', ' ')),",
				"          PTNT_YR_OF_BRTH = iif(isNull(PTNT_YR_OF_BRTH), 1900 , toInteger(PTNT_YR_OF_BRTH) ),",
				"          PTNT_AGE = iif(\r",
				"    isNull(PTNT_YR_OF_BRTH),\r",
				"    0,\r",
				"    toInteger(year(currentDate()) - toInteger(PTNT_YR_OF_BRTH))\r",
				"),",
				"          PTNT_GNDR = iif(\r",
				"    isNull(PTNT_GNDR), \r",
				"    'UNK', \r",
				"    iif(PTNT_GNDR == 'M', 'Male', iif(PTNT_GNDR == 'F', 'Female', 'UNK'))\r",
				"),",
				"          TRANS_DATE = iif(\r",
				"    isNull(DT_WRT),\r",
				"    toDate('1900-01-01', 'yyyy-MM-dd'),\r",
				"    toDate(toString(DT_WRT), 'yyyyMMdd')\r",
				"),",
				"          PROD_ID = iif(isNull(PROD_ID), 'UNK' , PROD_ID),",
				"          PROD_GROUP_ID = iif(\r",
				"    isNull(GRP_ID),\r",
				"    'UNK',\r",
				"    left(trim(GRP_ID), 2) + right(trim(GRP_ID), 2)\r",
				"),",
				"          PAYMENT_TYPE = iif(\r",
				"    isNull(PMT_TYP),\r",
				"    'UNK',\r",
				"    iif(PMT_TYP == '1', 'On-Line', iif(PMT_TYP == '2', 'Cash', 'Others'))\r",
				"),",
				"          COGS_AMT = toDecimal(divide(toInteger(COGS_AMT), 100), 12, 2),",
				"          REIMB_AMT = toDecimal(toInteger(COGS_AMT)+toInteger(REIMB_AMT), 12 ,2),",
				"          {TOTAL_AMT(COL 3)} = toDecimal((toInteger(COGS_AMT) * toInteger(REIMB_AMT)), 12 , 2),",
				"          INGRD_CST_AMT = toDecimal(divide(toInteger(INGRD_CST_AMT), 100), 12, 2),",
				"          FILLED_DATE = iif(isNull(DT_FILL),toDate('1900-01-01', 'yyyy-MM-dd'),toDate(DT_FILL, 'yyyyMMdd')),",
				"          PAYR_CNTRCT_FLG = toString(iif(\r",
				"    TOT_RX_PRC_COLL > USUAL_AND_CSTMARY,\r",
				"    'Y',\r",
				"    'N'\r",
				")),",
				"          YEAR_DESC = YEAR_DESC) ~> Trnsformation",
				"SLSTAXAMT derive(each(match(type=='Integer'), $$ = iifNull($$, -1, $$)),",
				"          REIMB_AMT = iif(isNull(REIMB_AMT),toDecimal(0),REIMB_AMT),",
				"          INGRD_CST_AMT = iif(isNull(INGRD_CST_AMT),toDecimal(0),INGRD_CST_AMT)) ~> NullHandling",
				"Trnsformation window(over(PROD_ID),",
				"     asc(PROD_ID, true),",
				"     {PTNT_COPAY_AMT(COL1)} = avg(toInteger(COPAY_AMT))) ~> PTNTCOPAYAMT",
				"SrcYears filter(regexMatch(YEAR_ID, '[A-Za-z]\\\\d+{4}')) ~> filter1",
				"SelectingColumn derive(each(match(type=='string' ), $$ = iif(isNull($$) || trim($$)=='','UNK',$$))) ~> StringNullHandling",
				"PhrmcyDerived select(mapColumn(",
				"          each(match(true()),",
				"               $$+'_tgt' = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> ChangingName",
				"PTNTCOPAYAMT window(over(PROD_ID),",
				"     asc(PROD_ID, true),",
				"     {SLS_TAX_AMT(COL2)} = max(toInteger({PTNT_COPAY_AMT(COL1)}))) ~> SLSTAXAMT",
				"NullHandling derive(DCT_AMT = toDecimal(iif(\r",
				"    {PTNT_COPAY_AMT(COL1)} > 0,\r",
				"    toDecimal({PTNT_COPAY_AMT(COL1)})/{TOTAL_AMT(COL 3)},\r",
				"    multiply({TOTAL_AMT(COL 3)}, 0.20)\r",
				"),12,2)) ~> DctamtTransform",
				"JoinSrcYears select(mapColumn(",
				"          each(match(/* All input columns */true()),",
				"               /* Input name */$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectingColumn",
				"DctamtTransform select(mapColumn(",
				"          PTNT_CD,",
				"          PTNT_YR_OF_BRTH,",
				"          PTNT_GNDR,",
				"          TRANS_NBR,",
				"          PROD_ID,",
				"          REIMB_AMT = Trnsformation@REIMB_AMT,",
				"          INGRD_CST_AMT = Trnsformation@INGRD_CST_AMT,",
				"          COGS_AMT,",
				"          YEAR_DESC,",
				"          PTNT_NM,",
				"          PTNT_AGE,",
				"          TRANS_DATE,",
				"          PROD_GROUP_ID,",
				"          PAYMENT_TYPE,",
				"          TOTAL_AMT = {TOTAL_AMT(COL 3)},",
				"          FILLED_DATE,",
				"          PAYR_CNTRCT_FLG,",
				"          PTNT_COPAY_AMT = {PTNT_COPAY_AMT(COL1)},",
				"          SLS_TAX_AMT = {SLS_TAX_AMT(COL2)},",
				"          DCT_AMT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2"
			]
		}
	}
}