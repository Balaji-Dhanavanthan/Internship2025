{
	"name": "STTM_DIM_TGT",
	"properties": {
		"folder": {
			"name": "TDSG_ADF_DataFlow"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "phrmcysrc"
				},
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "langsrc"
				},
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "statussrc"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "PhrmcyDerived"
				},
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "select1"
				},
				{
					"name": "Transformation"
				},
				{
					"name": "NullHandling"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PHRMCY_NAT_PROV_ID_NBR as string,",
				"          PHRMCY_NCPDP_NBR as string,",
				"          PTNT_CD as string,",
				"          PSCB_FIRST_NM as string,",
				"          PSCB_LAST_NM as string,",
				"          LANG_CD as string,",
				"          DEAL_ID as string,",
				"          PHRMCY_NM as string,",
				"          PHRMCY_ST_ADDR_LINE1_TXT as string,",
				"          PHRMCY_ADDR_ZIP_CD as string,",
				"          PHRMCY_ADDR_CITY_NM as string,",
				"          PHRMCY_ADDR_ST_CD as string,",
				"          PHRMCY_ADDR_ST_NAME as string,",
				"          PHRMCY_ADDR_ZNE_CD as string,",
				"          PHRMCY_ADDR_ZNE_NM as string,",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> phrmcysrc",
				"source(output(",
				"          LANG_ID as string,",
				"          LANG_CD as string,",
				"          LANG_DESC as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> langsrc",
				"source(output(",
				"          deal_id as string,",
				"          deal_nbr as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> statussrc",
				"phrmcysrc derive(PHRMCY_NCPDP_NBR = iif(PHRMCY_NCPDP_NBR == 'NULL', -1, toInteger(PHRMCY_NCPDP_NBR)),",
				"          PHRMCY_NAT_PROV_ID_NBR = iif(PHRMCY_NAT_PROV_ID_NBR == 'NULL', -1, toInteger(PHRMCY_NAT_PROV_ID_NBR)),",
				"          PHRMCY_ADDR_ZIP_CD = iif(PHRMCY_ADDR_ZIP_CD == 'NULL', -1, toInteger(PHRMCY_ADDR_ZIP_CD)),",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT = toDate(iif(PHRMCY_SYS_IVR_DTA_STRT_DT == 'NULL', '31-12-2999 00:00', PHRMCY_SYS_IVR_DTA_STRT_DT), 'dd-MM-yyyy')) ~> PhrmcyDerived",
				"PhrmcyDerived, statussrc join(phrmcysrc@DEAL_ID == statussrc@deal_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1, langsrc join(phrmcysrc@LANG_CD == langsrc@LANG_CD,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"select1 keyGenerate(output(PTNT_KEY as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"join2 select(mapColumn(",
				"          PHRMCY_NAT_PROV_ID_NBR,",
				"          PHRMCY_NCPDP_NBR,",
				"          PTNT_CD,",
				"          PSCB_FIRST_NM,",
				"          PSCB_LAST_NM,",
				"          LANG_CD = phrmcysrc@LANG_CD,",
				"          DEAL_ID,",
				"          PHRMCY_NM,",
				"          PHRMCY_ST_ADDR_LINE1_TXT,",
				"          PHRMCY_ADDR_ZIP_CD,",
				"          PHRMCY_ADDR_CITY_NM,",
				"          PHRMCY_ADDR_ST_CD,",
				"          PHRMCY_ADDR_ST_NAME,",
				"          PHRMCY_ADDR_ZNE_CD,",
				"          PHRMCY_ADDR_ZNE_NM,",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT,",
				"          deal_id = statussrc@deal_id,",
				"          deal_nbr,",
				"          LANG_ID,",
				"          LANG_CD = langsrc@LANG_CD,",
				"          LANG_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"NullHandling derive(PTNT_ID = toInteger(split(PTNT_CD,'_')[1])\r",
				",",
				"          PTNT_CD = right(PTNT_CD,4),",
				"          PHRMCY_NM = replace(\r",
				"  replace(\r",
				"    replace(\r",
				"      replace(PHRMCY_NM, '-', ' '),\r",
				"      '&', ' '\r",
				"    ),\r",
				"    ',', ' '\r",
				"  ),\r",
				"  '\\'', ' '\r",
				")\r",
				",",
				"          PHRMCY_ADDR_CITY_NM = iif(size(split(trim(PHRMCY_ADDR_CITY_NM), ' ')) > 1,        concat(upper(left(at(split(trim(PHRMCY_ADDR_CITY_NM), ' '), 1), 1)), upper(left(at(split(trim(PHRMCY_ADDR_CITY_NM), ' '), 2), 1))),        upper(substring(trim(PHRMCY_ADDR_CITY_NM), 1, 3))    )  ,",
				"          PHRMCY_ADDR_ZIP_CD = lpad(toString(PHRMCY_ADDR_ZIP_CD), 5, '0')\r",
				",",
				"          PSCB_EMAIL_ID = concat(\r",
				"    left(trim(PSCB_FIRST_NM), toInteger(round(length(trim(PSCB_FIRST_NM)) * 1/2))),\r",
				"    left(trim(PSCB_LAST_NM), 1),\r",
				"    '@UN.com'\r",
				"),",
				"          PHRMCY_ADDR_ST_NAME = initCap(PHRMCY_ADDR_ST_NAME)\r",
				",",
				"          PHRMCY_ADDR_ZNE_NM = initCap(PHRMCY_ADDR_ZNE_NM),",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT = toString(PHRMCY_SYS_IVR_DTA_STRT_DT,'dd-MMM-yyyy')\r",
				" ,",
				"          PHRMCY_SYS_IVR_DTA_STRT_QTR = concat(iif(month(PHRMCY_SYS_IVR_DTA_STRT_DT) <= 3, 'Q1',iif(month(PHRMCY_SYS_IVR_DTA_STRT_DT) <= 6, 'Q2',               \r",
				"iif(month(PHRMCY_SYS_IVR_DTA_STRT_DT) <= 9, 'Q3', 'Q4'))),'-',toString(year(PHRMCY_SYS_IVR_DTA_STRT_DT))),",
				"          PHRMCY_SYS_IVR_DTA_STRT_YR = toString(year(PHRMCY_SYS_IVR_DTA_STRT_DT)),",
				"          PHRMCY_AGE = year(currentUTC()) - year(PHRMCY_SYS_IVR_DTA_STRT_DT)\r",
				",",
				"          DEAL_TYPE_CD = left(deal_nbr,2)) ~> Transformation",
				"surrogateKey1 derive(each(match(type=='string'), $$ = iif(isNull($$),'UNK',$$))) ~> NullHandling"
			]
		}
	}
}