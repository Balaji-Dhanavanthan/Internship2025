{
	"name": "DF_SCD_1",
	"properties": {
		"folder": {
			"name": "prev"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_CSV_test",
						"type": "DatasetReference"
					},
					"name": "tgtCSV"
				},
				{
					"dataset": {
						"referenceName": "DS_CSV_test",
						"type": "DatasetReference"
					},
					"name": "srcCSV"
				},
				{
					"dataset": {
						"referenceName": "DS_CSV_test",
						"type": "DatasetReference"
					},
					"name": "randomSrc"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_CSV_test",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DS_CSV_test",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "InnerOnId"
				},
				{
					"name": "alterRow1"
				},
				{
					"name": "alterRow2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          emp_id as short,",
				"          first_name as string,",
				"          last_name as string,",
				"          salary as double,",
				"          created_date as string,",
				"          update_date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> tgtCSV",
				"source(output(",
				"          emp_id as short,",
				"          first_name as string,",
				"          last_name as string,",
				"          salary as double,",
				"          created_date as string,",
				"          update_date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> srcCSV",
				"source(output(",
				"          PTNT_KEY as short,",
				"          PTNT_ID as integer,",
				"          PTNT_CD as string,",
				"          PHRMCY_NCPDP_NBR as integer,",
				"          PHRMCY_NAT_PROV_ID_NBR as string,",
				"          PSCB_FIRST_NM as string,",
				"          PSCB_LAST_NM as string,",
				"          PHRMCY_NM as string,",
				"          PHRMCY_ADDR_CITY_NM as string,",
				"          PHRMCY_ADDR_ST_NM as string,",
				"          PHRMCY_ADDR_ZNE_NM as string,",
				"          PHRMCY_ADDR_ZIP_CD as string,",
				"          PSCB_EMAIL_ID as string,",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT as string,",
				"          PHRMCY_SYS_IVR_DTA_STRT_QTR as string,",
				"          PHRMCY_SYS_IVR_DTA_STRT_YR as string,",
				"          PHRMCY_AGE as short,",
				"          DEAL_ID as string,",
				"          DEAL_TYPE_CD as string,",
				"          DEAL_NUMBER as string,",
				"          LANG_CD as string,",
				"          LANG_DESC as string,",
				"          RCD_CRT_TMS as timestamp,",
				"          RCD_MOD_TMS as string,",
				"          START_DATE as timestamp,",
				"          END_DATE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> randomSrc",
				"tgtCSV, srcCSV join(tgtCSV@emp_id == srcCSV@emp_id,",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> InnerOnId",
				"InnerOnId alterRow(insertIf(isNull(tgtCSV@emp_id))) ~> alterRow1",
				"InnerOnId alterRow(updateIf(tgtCSV@emp_id==srcCSV@emp_id&&(tgtCSV@salary!=srcCSV@salary||srcCSV@update_date!=tgtCSV@update_date))) ~> alterRow2",
				"alterRow2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          emp_id = tgtCSV@emp_id,",
				"          first_name = tgtCSV@first_name,",
				"          last_name = tgtCSV@last_name,",
				"          salary = tgtCSV@salary,",
				"          created_date = tgtCSV@created_date,",
				"          update_date = tgtCSV@update_date,",
				"          emp_id = srcCSV@emp_id,",
				"          first_name = srcCSV@first_name,",
				"          last_name = srcCSV@last_name,",
				"          salary = srcCSV@salary,",
				"          created_date = srcCSV@created_date,",
				"          update_date = srcCSV@update_date",
				"     )) ~> sink1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2"
			]
		}
	}
}