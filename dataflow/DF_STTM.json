{
	"name": "DF_STTM",
	"properties": {
		"folder": {
			"name": "STTM"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_onefile",
						"type": "DatasetReference"
					},
					"name": "phrmcy"
				},
				{
					"dataset": {
						"referenceName": "DS_onefile1",
						"type": "DatasetReference"
					},
					"name": "status"
				},
				{
					"dataset": {
						"referenceName": "DS_onefile2",
						"type": "DatasetReference"
					},
					"name": "language"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PHRMCY_NAT_PROV_ID_NBR as string,",
				"          PHRMCY_NCPDP_NBR as string,",
				"          PTNT_CD as string,",
				"          PSCB_FIRST_NM as string,",
				"          PSCB_LAST_NM as string,",
				"          LANG_CD as string,",
				"          DEAL_ID as string,",
				"          PHRMCY_NM as string,",
				"          PHRMCY_ST_ADDR_LINE1_TXT as string,",
				"          PHRMCY_ADDR_ZIP_CD as string,",
				"          PHRMCY_ADDR_CITY_NM as string,",
				"          PHRMCY_ADDR_ST_CD as string,",
				"          PHRMCY_ADDR_ST_NAME as string,",
				"          PHRMCY_ADDR_ZNE_CD as string,",
				"          PHRMCY_ADDR_ZNE_NM as string,",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> phrmcy",
				"source(output(",
				"          deal_id as string,",
				"          deal_nbr as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> status",
				"source(output(",
				"          LANG_ID as short,",
				"          LANG_CD as string,",
				"          LANG_DESC as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> language",
				"phrmcy derive(PTNT_CD = toInteger(split(PTNT_CD, '_')[1])\r",
				",",
				"          PHRMCY_NCPDP_NBR = toString(right(PHRMCY_NCPDP_NBR,4))) ~> derivedColumn1"
			]
		}
	}
}