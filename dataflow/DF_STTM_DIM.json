{
	"name": "DF_STTM_DIM",
	"properties": {
		"folder": {
			"name": "Day9"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_scd2_test_src",
						"type": "DatasetReference"
					},
					"name": "phrmcy"
				},
				{
					"dataset": {
						"referenceName": "DS_Dim_STTM_source",
						"type": "DatasetReference"
					},
					"name": "Language"
				},
				{
					"dataset": {
						"referenceName": "DS_Dim_STTM_source",
						"type": "DatasetReference"
					},
					"name": "status"
				},
				{
					"dataset": {
						"referenceName": "DS_CSV_Sink",
						"type": "DatasetReference"
					},
					"name": "DimPtnt"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_CSV_Sink",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DCPHRMCYCast"
				},
				{
					"name": "join1"
				},
				{
					"name": "phrmcyName"
				},
				{
					"name": "languageName"
				},
				{
					"name": "statusName"
				},
				{
					"name": "join2"
				},
				{
					"name": "filter1"
				},
				{
					"name": "DCPhrmcyNull"
				},
				{
					"name": "DCTransition"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "TargetCast"
				},
				{
					"name": "join3"
				},
				{
					"name": "split1"
				},
				{
					"name": "select2"
				},
				{
					"name": "select3"
				},
				{
					"name": "split2"
				},
				{
					"name": "update"
				},
				{
					"name": "historyUpdate"
				},
				{
					"name": "select4"
				},
				{
					"name": "valueUdate"
				},
				{
					"name": "select5"
				},
				{
					"name": "union1"
				},
				{
					"name": "union2"
				},
				{
					"name": "select6"
				},
				{
					"name": "union3"
				},
				{
					"name": "surrogateKey1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PHRMCY_NAT_PROV_ID_NBR as string,",
				"          PHRMCY_NCPDP_NBR as string,",
				"          PTNT_CD as string,",
				"          PSCB_FIRST_NM as string,",
				"          PSCB_LAST_NM as string,",
				"          LANG_CD as string,",
				"          DEAL_ID as string,",
				"          PHRMCY_NM as string,",
				"          PHRMCY_ST_ADDR_LINE1_TXT as string,",
				"          PHRMCY_ADDR_ZIP_CD as string,",
				"          PHRMCY_ADDR_CITY_NM as string,",
				"          PHRMCY_ADDR_ST_CD as string,",
				"          PHRMCY_ADDR_ST_NAME as string,",
				"          PHRMCY_ADDR_ZNE_CD as string,",
				"          PHRMCY_ADDR_ZNE_NM as string,",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> phrmcy",
				"source(output(",
				"          LANG_ID as integer,",
				"          LANG_CD as string,",
				"          LANG_DESC as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Language",
				"source(output(",
				"          deal_id as string,",
				"          deal_nbr as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> status",
				"source(output(",
				"          PTNT_KEY as string,",
				"          PTNT_ID as string,",
				"          PTNT_CD as string,",
				"          PHRMCY_NAT_PROV_ID_NBR as string,",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT as string,",
				"          PHRMCY_NCPDP_NBR as string,",
				"          PSCB_FIRST_NM as string,",
				"          PSCB_LAST_NM as string,",
				"          PHRMCY_NM as string,",
				"          {PHRMCY_ADDR_CITY_NM } as string,",
				"          PHRMCY_ADDR_ST_NM as string,",
				"          PHRMCY_ADDR_ZNE_NM as string,",
				"          PHRMCY_ADDR_ZIP_CD as string,",
				"          PHRMCY_AGE as string,",
				"          PSCB_EMAIL_ID as string,",
				"          PHRMCY_SYS_IVR_DTA_STRT_QTR as string,",
				"          PHRMCY_SYS_IVR_DTA_STRT_YR as string,",
				"          DEAL_ID as string,",
				"          DEAL_TYPE_CD as string,",
				"          DEAL_NUMBER as string,",
				"          LANG_CD as string,",
				"          LANG_DESC as string,",
				"          RCD_CRT_TMS as string,",
				"          START_DATE as string,",
				"          RCD_MOD_TMS as string,",
				"          END_DATE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DimPtnt",
				"phrmcyName derive(PHRMCY_NAT_PROV_ID_NBR = toInteger({p.PHRMCY_NAT_PROV_ID_NBR}),",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT = toDate({p.PHRMCY_SYS_IVR_DTA_STRT_DT},'dd-MM-yyyy HH:mm')) ~> DCPHRMCYCast",
				"DCPHRMCYCast, languageName join({p.LANG_CD} == {l.LANG_CD},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"DCPhrmcyNull select(mapColumn(",
				"          {p.PHRMCY_NAT_PROV_ID_NBR} = PHRMCY_NAT_PROV_ID_NBR,",
				"          {p.PHRMCY_NCPDP_NBR} = PHRMCY_NCPDP_NBR,",
				"          {p.PTNT_CD} = PTNT_CD,",
				"          {p.PSCB_FIRST_NM} = PSCB_FIRST_NM,",
				"          {p.PSCB_LAST_NM} = PSCB_LAST_NM,",
				"          {p.LANG_CD} = LANG_CD,",
				"          {p.DEAL_ID} = DEAL_ID,",
				"          {p.PHRMCY_NM} = PHRMCY_NM,",
				"          {p.PHRMCY_ST_ADDR_LINE1_TXT} = PHRMCY_ST_ADDR_LINE1_TXT,",
				"          {p.PHRMCY_ADDR_ZIP_CD} = PHRMCY_ADDR_ZIP_CD,",
				"          {p.PHRMCY_ADDR_CITY_NM} = PHRMCY_ADDR_CITY_NM,",
				"          {p.PHRMCY_ADDR_ST_CD} = PHRMCY_ADDR_ST_CD,",
				"          {p.PHRMCY_ADDR_ST_NAME} = PHRMCY_ADDR_ST_NAME,",
				"          {p.PHRMCY_ADDR_ZNE_CD} = PHRMCY_ADDR_ZNE_CD,",
				"          {p.PHRMCY_ADDR_ZNE_NM} = PHRMCY_ADDR_ZNE_NM,",
				"          {p.PHRMCY_SYS_IVR_DTA_STRT_DT} = PHRMCY_SYS_IVR_DTA_STRT_DT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> phrmcyName",
				"Language select(mapColumn(",
				"          {l.LANG_ID} = LANG_ID,",
				"          {l.LANG_CD} = LANG_CD,",
				"          {l.LANG_DESC} = LANG_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> languageName",
				"status select(mapColumn(",
				"          {d.deal_id} = deal_id,",
				"          {d.deal_nbr} = deal_nbr",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> statusName",
				"join1, statusName join({p.DEAL_ID} == {d.deal_id}",
				"     && {p.DEAL_ID} == {d.deal_nbr},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2 filter(in( ['US','PR'],{p.PHRMCY_ADDR_ZNE_CD})) ~> filter1",
				"phrmcy derive(each(match(type=='string'), $$ = case($$=='NULL', toString(null()), $$))) ~> DCPhrmcyNull",
				"filter1 derive(PTNT_CD = substringIndex({p.PTNT_CD}, '_', -1),",
				"          PTNT_ID = iifNull(toInteger(substringIndex({p.PTNT_CD}, '_', 1)),-1,toInteger(substringIndex({p.PTNT_CD}, '_', 1))),",
				"          PHRMCY_NCPDP_NBR = case(isNull({p.PHRMCY_NCPDP_NBR}), -1,toInteger({p.PHRMCY_NCPDP_NBR})),",
				"          PHRMCY_NAT_PROV_ID_NBR = case(isNull({p.PHRMCY_NAT_PROV_ID_NBR}), 'UNK', {p.PHRMCY_NAT_PROV_ID_NBR}),",
				"          PSCB_FIRST_NM = {p.PSCB_FIRST_NM},",
				"          PSCB_LAST_NM = {p.PSCB_LAST_NM},",
				"          PHRMCY_NM = regexReplace({p.PHRMCY_NM}, \"[,&'-]\", ' '),",
				"          {PHRMCY_ADDR_CITY_NM } = case(like(trim({p.PHRMCY_ADDR_CITY_NM}) ,'% %'), \r",
				"concat(left((regexSplit({p.PHRMCY_ADDR_CITY_NM},' ')[1]),1),\r",
				" left((regexSplit({p.PHRMCY_ADDR_CITY_NM},' ')[2]),1)) ,\r",
				"left({p.PHRMCY_ADDR_CITY_NM}, 3)),",
				"          PHRMCY_ADDR_ST_NM = initCap({p.PHRMCY_ADDR_ST_NAME}),",
				"          PHRMCY_ADDR_ZNE_NM = initCap({p.PHRMCY_ADDR_ZNE_NM}),",
				"          {PHRMCY_ADDR_ZIP_CD } = case(length({p.PHRMCY_ADDR_ZIP_CD})<5, right(concat('00000', {p.PHRMCY_ADDR_ZIP_CD}),5), left({p.PHRMCY_ADDR_ZIP_CD}, 5)),",
				"          PSCB_EMAIL_ID = concat(left(trim({p.PSCB_FIRST_NM}),length({p.PSCB_FIRST_NM})/2),left({p.PSCB_LAST_NM},1),'@UN.com'),",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT = toString(toTimestamp({p.PHRMCY_SYS_IVR_DTA_STRT_DT},'dd-MM-yyyy HH:mm'),'dd-MMM-yyyy'),",
				"          PHRMCY_SYS_IVR_DTA_STRT_QTR = 'Q' + toString(ceil(month(toTimestamp({p.PHRMCY_SYS_IVR_DTA_STRT_DT}, 'dd-MM-yyyy HH:mm')) / 3)) + '-' +\r",
				"toString(year(toTimestamp({p.PHRMCY_SYS_IVR_DTA_STRT_DT}, 'dd-MM-yyyy HH:mm'))),",
				"          PHRMCY_SYS_IVR_DTA_STRT_YR = toString(year(toTimestamp({p.PHRMCY_SYS_IVR_DTA_STRT_DT}, 'dd-MM-yyyy HH:mm'))),",
				"          PHRMCY_AGE = toInteger(minus(currentDate(),PHRMCY_SYS_IVR_DTA_STRT_DT)/365),",
				"          DEAL_ID = case(in([{d.deal_id},{d.deal_nbr}], {p.DEAL_ID}), 'Exists', 'Not exists'),",
				"          DEAL_TYPE_CD = left({d.deal_nbr},2),",
				"          DEAL_NUMBER = substring({d.deal_nbr}, 2, length({d.deal_nbr})),",
				"          LANG_CD = {l.LANG_CD},",
				"          LANG_DESC = {l.LANG_DESC},",
				"          RCD_CRT_TMS = currentTimestamp(),",
				"          START_DATE = currentTimestamp()) ~> DCTransition",
				"DCTransition derive(each(match(type=='string'), $$ = iif(isNull($$), 'UNK', $$)),",
				"          RCD_MOD_TMS = toTimestamp('01-01-1900','dd-MM-yyyy'),",
				"          END_DATE = toTimestamp('01-01-1900','dd-MM-yyyy'),",
				"          each(match(type=='integer'), $$ = iif(isNull($$), -1, $$))) ~> derivedColumn1",
				"select2 derive({t.PTNT_KEY} = toInteger({t.PTNT_KEY}),",
				"          {t.PTNT_ID} = toInteger({t.PTNT_ID}),",
				"          {t.PHRMCY_NCPDP_NBR} = toInteger({t.PHRMCY_NCPDP_NBR}),",
				"          {t.PHRMCY_AGE} = toInteger({t.PHRMCY_AGE}),",
				"          {t.RCD_CRT_TMS} = toTimestamp({t.RCD_CRT_TMS},'yyyy-MM-dd HH:mm:ss'),",
				"          {t.RCD_MOD_TMS} = toTimestamp({t.RCD_MOD_TMS},'yyyy-MM-dd HH:mm:ss'),",
				"          {t.START_DATE} = toTimestamp({t.START_DATE},'yyyy-MM-dd HH:mm:ss'),",
				"          {t.END_DATE} = toTimestamp({t.END_DATE},'yyyy-MM-dd HH:mm:ss')) ~> TargetCast",
				"select3, TargetCast join(replace({s.PTNT_CD}, '_', '') == {t.PTNT_CD},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3 split(isNull({t.PTNT_CD})&& isNull({t.RCD_MOD_TMS}),",
				"     disjoint: false) ~> split1@(insert, UpdateAndExists)",
				"DimPtnt select(mapColumn(",
				"          {t.PTNT_KEY} = PTNT_KEY,",
				"          {t.PTNT_ID} = PTNT_ID,",
				"          {t.PTNT_CD} = PTNT_CD,",
				"          {t.PHRMCY_NCPDP_NBR} = PHRMCY_NCPDP_NBR,",
				"          {t.PHRMCY_NAT_PROV_ID_NBR} = PHRMCY_NAT_PROV_ID_NBR,",
				"          {t.PSCB_FIRST_NM} = PSCB_FIRST_NM,",
				"          {t.PSCB_LAST_NM} = PSCB_LAST_NM,",
				"          {t.PHRMCY_NM} = PHRMCY_NM,",
				"          {t.PHRMCY_ADDR_CITY_NM} = PHRMCY_ADDR_CITY_NM,",
				"          {t.PHRMCY_ADDR_ST_NM} = PHRMCY_ADDR_ST_NM,",
				"          {t.PHRMCY_ADDR_ZNE_NM} = PHRMCY_ADDR_ZNE_NM,",
				"          {t.PHRMCY_ADDR_ZIP_CD} = PHRMCY_ADDR_ZIP_CD,",
				"          {t.PSCB_EMAIL_ID} = PSCB_EMAIL_ID,",
				"          {t.PHRMCY_SYS_IVR_DTA_STRT_DT} = PHRMCY_SYS_IVR_DTA_STRT_DT,",
				"          {t.PHRMCY_SYS_IVR_DTA_STRT_QTR} = PHRMCY_SYS_IVR_DTA_STRT_QTR,",
				"          {t.PHRMCY_SYS_IVR_DTA_STRT_YR} = PHRMCY_SYS_IVR_DTA_STRT_YR,",
				"          {t.PHRMCY_AGE} = PHRMCY_AGE,",
				"          {t.DEAL_ID} = DEAL_ID,",
				"          {t.DEAL_TYPE_CD} = DEAL_TYPE_CD,",
				"          {t.DEAL_NUMBER} = DEAL_NUMBER,",
				"          {t.LANG_CD} = LANG_CD,",
				"          {t.LANG_DESC} = LANG_DESC,",
				"          {t.RCD_CRT_TMS} = RCD_CRT_TMS,",
				"          {t.RCD_MOD_TMS} = RCD_MOD_TMS,",
				"          {t.START_DATE} = START_DATE,",
				"          {t.END_DATE} = END_DATE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"derivedColumn1 select(mapColumn(",
				"          {s.PHRMCY_NAT_PROV_ID_NBR} = PHRMCY_NAT_PROV_ID_NBR,",
				"          {s.PHRMCY_SYS_IVR_DTA_STRT_DT} = PHRMCY_SYS_IVR_DTA_STRT_DT,",
				"          {s.PTNT_CD} = PTNT_CD,",
				"          {s.PTNT_ID} = PTNT_ID,",
				"          {s.PHRMCY_NCPDP_NBR} = PHRMCY_NCPDP_NBR,",
				"          {s.PSCB_FIRST_NM} = PSCB_FIRST_NM,",
				"          {s.PSCB_LAST_NM} = PSCB_LAST_NM,",
				"          {s.PHRMCY_NM} = PHRMCY_NM,",
				"          {s.PHRMCY_ADDR_CITY_NM } = {PHRMCY_ADDR_CITY_NM },",
				"          {s.PHRMCY_ADDR_ST_NM} = PHRMCY_ADDR_ST_NM,",
				"          {s.PHRMCY_ADDR_ZNE_NM} = PHRMCY_ADDR_ZNE_NM,",
				"          {s.PHRMCY_ADDR_ZIP_CD } = {PHRMCY_ADDR_ZIP_CD },",
				"          {s.PSCB_EMAIL_ID} = PSCB_EMAIL_ID,",
				"          {s.PHRMCY_SYS_IVR_DTA_STRT_QTR} = PHRMCY_SYS_IVR_DTA_STRT_QTR,",
				"          {s.PHRMCY_SYS_IVR_DTA_STRT_YR} = PHRMCY_SYS_IVR_DTA_STRT_YR,",
				"          {s.PHRMCY_AGE} = PHRMCY_AGE,",
				"          {s.DEAL_ID} = DEAL_ID,",
				"          {s.DEAL_TYPE_CD} = DEAL_TYPE_CD,",
				"          {s.DEAL_NUMBER} = DEAL_NUMBER,",
				"          {s.LANG_CD} = LANG_CD,",
				"          {s.RCD_MOD_TMS} = RCD_MOD_TMS,",
				"          {s.END_DATE} = END_DATE,",
				"          {s.LANG_DESC} = LANG_DESC,",
				"          {s.RCD_CRT_TMS} = RCD_CRT_TMS,",
				"          {s.START_DATE} = START_DATE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"split1@UpdateAndExists split({s.PHRMCY_ADDR_ZIP_CD }!={t.PHRMCY_ADDR_ZIP_CD}&& isNull({t.RCD_MOD_TMS}),",
				"     disjoint: false) ~> split2@(updated, exists)",
				"split2@updated alterRow(upsertIf({s.PHRMCY_ADDR_ZIP_CD }!={t.PHRMCY_ADDR_ZIP_CD}&& isNull({t.RCD_MOD_TMS}))) ~> update",
				"update derive({t.RCD_MOD_TMS} = currentTimestamp(),",
				"          {t.END_DATE} = currentTimestamp()) ~> historyUpdate",
				"historyUpdate select(mapColumn(",
				"          PTNT_KEY = {t.PTNT_KEY},",
				"          PTNT_ID = {t.PTNT_ID},",
				"          PTNT_CD = {t.PTNT_CD},",
				"          PHRMCY_NCPDP_NBR = {t.PHRMCY_NCPDP_NBR},",
				"          PHRMCY_NAT_PROV_ID_NBR = {t.PHRMCY_NAT_PROV_ID_NBR},",
				"          PSCB_FIRST_NM = {t.PSCB_FIRST_NM},",
				"          PSCB_LAST_NM = {t.PSCB_LAST_NM},",
				"          PHRMCY_NM = {t.PHRMCY_NM},",
				"          {PHRMCY_ADDR_CITY_NM } = {t.PHRMCY_ADDR_CITY_NM},",
				"          PHRMCY_ADDR_ST_NM = {t.PHRMCY_ADDR_ST_NM},",
				"          PHRMCY_ADDR_ZNE_NM = {t.PHRMCY_ADDR_ZNE_NM},",
				"          PHRMCY_ADDR_ZIP_CD = {t.PHRMCY_ADDR_ZIP_CD},",
				"          PSCB_EMAIL_ID = {t.PSCB_EMAIL_ID},",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT = {t.PHRMCY_SYS_IVR_DTA_STRT_DT},",
				"          PHRMCY_SYS_IVR_DTA_STRT_QTR = {t.PHRMCY_SYS_IVR_DTA_STRT_QTR},",
				"          PHRMCY_SYS_IVR_DTA_STRT_YR = {t.PHRMCY_SYS_IVR_DTA_STRT_YR},",
				"          PHRMCY_AGE = {t.PHRMCY_AGE},",
				"          DEAL_ID = {t.DEAL_ID},",
				"          DEAL_TYPE_CD = {t.DEAL_TYPE_CD},",
				"          DEAL_NUMBER = {t.DEAL_NUMBER},",
				"          LANG_CD = {t.LANG_CD},",
				"          LANG_DESC = {t.LANG_DESC},",
				"          RCD_CRT_TMS = {t.RCD_CRT_TMS},",
				"          RCD_MOD_TMS = {t.RCD_MOD_TMS},",
				"          START_DATE = {t.START_DATE},",
				"          END_DATE = {t.END_DATE}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"update select(mapColumn(",
				"          PHRMCY_NAT_PROV_ID_NBR = {s.PHRMCY_NAT_PROV_ID_NBR},",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT = {s.PHRMCY_SYS_IVR_DTA_STRT_DT},",
				"          PTNT_CD = {s.PTNT_CD},",
				"          PTNT_ID = {s.PTNT_ID},",
				"          PHRMCY_NCPDP_NBR = {s.PHRMCY_NCPDP_NBR},",
				"          PSCB_FIRST_NM = {s.PSCB_FIRST_NM},",
				"          PSCB_LAST_NM = {s.PSCB_LAST_NM},",
				"          PHRMCY_NM = {s.PHRMCY_NM},",
				"          {PHRMCY_ADDR_CITY_NM } = {s.PHRMCY_ADDR_CITY_NM },",
				"          PHRMCY_ADDR_ST_NM = {s.PHRMCY_ADDR_ST_NM},",
				"          PHRMCY_ADDR_ZNE_NM = {s.PHRMCY_ADDR_ZNE_NM},",
				"          PHRMCY_ADDR_ZIP_CD = {s.PHRMCY_ADDR_ZIP_CD },",
				"          PSCB_EMAIL_ID = {s.PSCB_EMAIL_ID},",
				"          PHRMCY_SYS_IVR_DTA_STRT_QTR = {s.PHRMCY_SYS_IVR_DTA_STRT_QTR},",
				"          PHRMCY_SYS_IVR_DTA_STRT_YR = {s.PHRMCY_SYS_IVR_DTA_STRT_YR},",
				"          PHRMCY_AGE = {s.PHRMCY_AGE},",
				"          DEAL_ID = {s.DEAL_ID},",
				"          DEAL_TYPE_CD = {s.DEAL_TYPE_CD},",
				"          DEAL_NUMBER = {s.DEAL_NUMBER},",
				"          LANG_CD = {s.LANG_CD},",
				"          LANG_DESC = {s.LANG_DESC},",
				"          RCD_CRT_TMS = {s.RCD_CRT_TMS},",
				"          START_DATE = {s.START_DATE}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> valueUdate",
				"split2@exists select(mapColumn(",
				"          PTNT_ID = {s.PTNT_ID},",
				"          PTNT_CD = {s.PTNT_CD},",
				"          PHRMCY_NCPDP_NBR = {s.PHRMCY_NCPDP_NBR},",
				"          PHRMCY_NAT_PROV_ID_NBR = {s.PHRMCY_NAT_PROV_ID_NBR},",
				"          PSCB_FIRST_NM = {s.PSCB_FIRST_NM},",
				"          PSCB_LAST_NM = {s.PSCB_LAST_NM},",
				"          PHRMCY_NM = {s.PHRMCY_NM},",
				"          {PHRMCY_ADDR_CITY_NM } = {s.PHRMCY_ADDR_CITY_NM },",
				"          PHRMCY_ADDR_ST_NM = {s.PHRMCY_ADDR_ST_NM},",
				"          PHRMCY_ADDR_ZIP_CD = {s.PHRMCY_ADDR_ZIP_CD },",
				"          PHRMCY_ADDR_ZNE_NM = {s.PHRMCY_ADDR_ZNE_NM},",
				"          {PHRMCY_ADDR_ZIP_CD } = {s.PHRMCY_ADDR_ZIP_CD },",
				"          PSCB_EMAIL_ID = {s.PSCB_EMAIL_ID},",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT = {s.PHRMCY_SYS_IVR_DTA_STRT_DT},",
				"          PHRMCY_SYS_IVR_DTA_STRT_QTR = {s.PHRMCY_SYS_IVR_DTA_STRT_QTR},",
				"          PHRMCY_SYS_IVR_DTA_STRT_YR = {s.PHRMCY_SYS_IVR_DTA_STRT_YR},",
				"          PHRMCY_AGE = {s.PHRMCY_AGE},",
				"          DEAL_ID = {s.DEAL_ID},",
				"          DEAL_TYPE_CD = {s.DEAL_TYPE_CD},",
				"          DEAL_NUMBER = {s.DEAL_NUMBER},",
				"          LANG_CD = {s.LANG_CD},",
				"          LANG_DESC = {s.LANG_DESC},",
				"          RCD_CRT_TMS = {s.RCD_CRT_TMS},",
				"          START_DATE = {s.START_DATE}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"valueUdate, select4 union(byName: true)~> union1",
				"union1, select5 union(byName: true)~> union2",
				"split1@insert select(mapColumn(",
				"          PTNT_ID = {s.PTNT_ID},",
				"          PTNT_CD = {s.PTNT_CD},",
				"          PHRMCY_NCPDP_NBR = {s.PHRMCY_NCPDP_NBR},",
				"          PHRMCY_NAT_PROV_ID_NBR = {s.PHRMCY_NAT_PROV_ID_NBR},",
				"          PSCB_FIRST_NM = {s.PSCB_FIRST_NM},",
				"          PSCB_LAST_NM = {s.PSCB_LAST_NM},",
				"          PHRMCY_NM = {s.PHRMCY_NM},",
				"          {PHRMCY_ADDR_CITY_NM } = {s.PHRMCY_ADDR_CITY_NM },",
				"          PHRMCY_ADDR_ST_NM = {s.PHRMCY_ADDR_ST_NM},",
				"          PHRMCY_ADDR_ZIP_CD = {s.PHRMCY_ADDR_ZIP_CD },",
				"          PHRMCY_ADDR_ZNE_NM = {s.PHRMCY_ADDR_ZNE_NM},",
				"          {PHRMCY_ADDR_ZIP_CD } = {s.PHRMCY_ADDR_ZIP_CD },",
				"          PSCB_EMAIL_ID = {s.PSCB_EMAIL_ID},",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT = {s.PHRMCY_SYS_IVR_DTA_STRT_DT},",
				"          PHRMCY_SYS_IVR_DTA_STRT_QTR = {s.PHRMCY_SYS_IVR_DTA_STRT_QTR},",
				"          PHRMCY_SYS_IVR_DTA_STRT_YR = {s.PHRMCY_SYS_IVR_DTA_STRT_YR},",
				"          PHRMCY_AGE = {s.PHRMCY_AGE},",
				"          DEAL_ID = {s.DEAL_ID},",
				"          DEAL_TYPE_CD = {s.DEAL_TYPE_CD},",
				"          DEAL_NUMBER = {s.DEAL_NUMBER},",
				"          LANG_CD = {s.LANG_CD},",
				"          LANG_DESC = {s.LANG_DESC},",
				"          RCD_CRT_TMS = {s.RCD_CRT_TMS},",
				"          START_DATE = {s.START_DATE}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select6",
				"select6, union2 union(byName: true)~> union3",
				"union3 keyGenerate(output(PTNT_KEY as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Dim_ptnt.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          PTNT_KEY,",
				"          PTNT_ID,",
				"          PTNT_CD,",
				"          PHRMCY_NAT_PROV_ID_NBR,",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT,",
				"          PHRMCY_NCPDP_NBR,",
				"          PSCB_FIRST_NM,",
				"          PSCB_LAST_NM,",
				"          PHRMCY_NM,",
				"          {PHRMCY_ADDR_CITY_NM },",
				"          PHRMCY_ADDR_ST_NM,",
				"          PHRMCY_ADDR_ZNE_NM,",
				"          PHRMCY_ADDR_ZIP_CD,",
				"          PHRMCY_AGE,",
				"          PSCB_EMAIL_ID,",
				"          PHRMCY_SYS_IVR_DTA_STRT_QTR,",
				"          PHRMCY_SYS_IVR_DTA_STRT_YR,",
				"          DEAL_ID,",
				"          DEAL_TYPE_CD,",
				"          DEAL_NUMBER,",
				"          LANG_CD,",
				"          LANG_DESC,",
				"          RCD_CRT_TMS,",
				"          START_DATE,",
				"          RCD_MOD_TMS,",
				"          END_DATE",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}