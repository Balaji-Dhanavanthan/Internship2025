{
	"name": "SCD_1",
	"properties": {
		"folder": {
			"name": "TDSG_ADF_DataFlow"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "target"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "sourceselect1"
				},
				{
					"name": "join1"
				},
				{
					"name": "split"
				},
				{
					"name": "update1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmployeeID as short,",
				"          Name as string,",
				"          Gender as string,",
				"          DateOfBirth as date,",
				"          Department as string,",
				"          JobTitle as string,",
				"          Salary as integer,",
				"          HireDate as date,",
				"          Address as string,",
				"          Email as string,",
				"          PhoneNumber as string,",
				"          MaritalStatus as string,",
				"          EffectiveDate as date,",
				"          EndDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          EmployeeID as short,",
				"          Name as string,",
				"          Gender as string,",
				"          DateOfBirth as date,",
				"          Department as string,",
				"          JobTitle as string,",
				"          Salary as integer,",
				"          HireDate as date,",
				"          Address as string,",
				"          Email as string,",
				"          PhoneNumber as string,",
				"          MaritalStatus as string,",
				"          EffectiveDate as date,",
				"          EndDate as string,",
				"          created_by as string,",
				"          created_at as date,",
				"          modified_by as string,",
				"          modified_at as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> target",
				"source1 select(mapColumn(",
				"          each(match(/* All input columns */ true()),",
				"               /* Input name */ $$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sourceselect1",
				"sourceselect1, target join(sourceselect1@EmployeeID == target@EmployeeID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 split(isNull(target@EmployeeID),",
				"     disjoint: false) ~> split@(Insert, Update1)",
				"split@Update1 alterRow(updateIf((split@Update1@EmployeeID==split@Update1@EmployeeID) && ((split@Update1@Department!=split@Update1@Department)||(split@Update1@JobTitle!=split@Update1@JobTitle)||(split@Update1@Salary!=split@Update1@Salary)||(split@Update1@PhoneNumber!=split@Update1@PhoneNumber)||(split@Update1@MaritalStatus!=split@Update1@MaritalStatus)))) ~> update1"
			]
		}
	}
}