{
	"name": "DF_Workshop1_4_I2025SRangan1",
	"properties": {
		"folder": {
			"name": "DF_old_I2025_SRangan1"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Source_I2025_SRangan1",
						"type": "DatasetReference"
					},
					"name": "source"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_new_I2025_SRangan1",
						"type": "DatasetReference"
					},
					"name": "sink"
				}
			],
			"transformations": [
				{
					"name": "select"
				},
				{
					"name": "filter"
				},
				{
					"name": "surrogateKey"
				},
				{
					"name": "DCNullHandle"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Survey_ID as integer,",
				"          Feedback_Program as string,",
				"          Firstname as string,",
				"          Lastname as string,",
				"          ContactName as string,",
				"          Email as string,",
				"          PHONE_NUMBER as integer,",
				"          Contact_Country as string,",
				"          Job_Title as string,",
				"          Contact_Department as string,",
				"          Language as string,",
				"          Salutation as string,",
				"          Ship_to as string,",
				"          Sold_to as string,",
				"          Lead_Contact_OD as string,",
				"          Lead_Contact_GBU_RBU as string,",
				"          Lead_Contact_SBU as string,",
				"          MainIndustry as string,",
				"          Region as string,",
				"          SalesChannel as string,",
				"          Customer_Network as boolean,",
				"          Lead_Contact_Segmentation1 as string,",
				"          Lead_Contact_Segmentation2 as string,",
				"          InvitationStatus as string,",
				"          Creationdate as string,",
				"          Invitationdate as string,",
				"          Local_Invitation_Date as string,",
				"          Survey_status as string,",
				"          Expires_on_date as string,",
				"          Local_Expiration_Date as string,",
				"          Reason_for_Score as string,",
				"          Ease_of_doing_business as short,",
				"          Issue_Resolution as short,",
				"          Product_Quality as short,",
				"          Delivery_Reliability as short,",
				"          Understanding_your_business_needs as short,",
				"          cur_date as string,",
				"          createdby as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source",
				"source select(mapColumn(",
				"          Survey_ID,",
				"          ContactName,",
				"          Email,",
				"          PHONE_NUMBER,",
				"          Job_Title,",
				"          Ship_to,",
				"          Sold_to,",
				"          Lead_Contact_SBU,",
				"          MainIndustry,",
				"          Lead_Contact_Segmentation1,",
				"          InvitationStatus,",
				"          Creationdate,",
				"          Invitationdate,",
				"          Local_Invitation_Date,",
				"          Survey_status,",
				"          Expires_on_date,",
				"          Local_Expiration_Date,",
				"          Reason_for_Score,",
				"          Ease_of_doing_business,",
				"          Issue_Resolution,",
				"          Product_Quality,",
				"          Delivery_Reliability,",
				"          Understanding_your_business_needs,",
				"          cur_date,",
				"          createdby",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select",
				"select filter(InvitationStatus == 'Completed'\r",
				"&& Product_Quality < 6) ~> filter",
				"filter keyGenerate(output(SurrogateKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey",
				"surrogateKey derive(each(match(type=='string'), $$ = iifNull($$, 'UNK')),",
				"          each(match(type=='integer'), $$ = iifNull($#, 0)),",
				"          file_name = 'Par.csv') ~> DCNullHandle",
				"DCNullHandle sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Prop_0 as string,",
				"          match_id as string,",
				"          date as string,",
				"          match_type as string,",
				"          event_name as string,",
				"          innings as string,",
				"          batting_team as string,",
				"          bowling_team as string,",
				"          over as string,",
				"          ball as string,",
				"          ball_no as string,",
				"          batter as string,",
				"          bat_pos as string,",
				"          runs_batter as string,",
				"          balls_faced as string,",
				"          bowler as string,",
				"          valid_ball as string,",
				"          runs_extras as string,",
				"          runs_total as string,",
				"          runs_bowler as string,",
				"          runs_not_boundary as string,",
				"          extra_type as string,",
				"          non_striker as string,",
				"          non_striker_pos as string,",
				"          wicket_kind as string,",
				"          player_out as string,",
				"          fielders as string,",
				"          runs_target as string,",
				"          review_batter as string,",
				"          team_reviewed as string,",
				"          review_decision as string,",
				"          umpire as string,",
				"          umpires_call as string,",
				"          player_of_match as string,",
				"          match_won_by as string,",
				"          win_outcome as string,",
				"          toss_winner as string,",
				"          toss_decision as string,",
				"          venue as string,",
				"          city as string,",
				"          day as string,",
				"          month as string,",
				"          year as string,",
				"          season as string,",
				"          gender as string,",
				"          team_type as string,",
				"          superover_winner as string,",
				"          result_type as string,",
				"          method as string,",
				"          balls_per_over as string,",
				"          overs as string,",
				"          event_match_no as string,",
				"          stage as string,",
				"          match_number as string,",
				"          team_runs as string,",
				"          team_balls as string,",
				"          team_wicket as string,",
				"          new_batter as string,",
				"          batter_runs as string,",
				"          batter_balls as string,",
				"          bowler_wicket as string,",
				"          batting_partners as string,",
				"          next_batter as string,",
				"          striker_out as string",
				"     ),",
				"     partitionFileNames:['ETL.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink"
			]
		}
	}
}