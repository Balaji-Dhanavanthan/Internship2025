{
	"name": "DF_Example",
	"properties": {
		"folder": {
			"name": "DataFlow1"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "split1"
				},
				{
					"name": "alterRow1"
				},
				{
					"name": "alterRow2"
				},
				{
					"name": "union1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Employee_ID as integer,",
				"          First_Name as string,",
				"          Last_Name as string,",
				"          Salary as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          Employee_ID as integer,",
				"          First_Name as string,",
				"          Last_Name as string,",
				"          Salary as integer,",
				"          Created_date as date,",
				"          Update_date as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1, derivedColumn1 join(source1@Employee_ID == source2@Employee_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"source2 derive(each(match(type == 'date'), $$ = iifNull($$, toDate(1990-01-01, 'yyyy-MM-dd'), $$))) ~> derivedColumn1",
				"join1 split((  source1@Employee_ID==source2@Employee_ID  )  ,",
				"     disjoint: false) ~> split1@(update, insert)",
				"split1@update alterRow(updateIf(split1@update@Salary != split1@update@Salary)) ~> alterRow1",
				"split1@insert alterRow(insertIf(isNull(split1@insert@Salary))) ~> alterRow2",
				"alterRow1, alterRow2 union(byName: true)~> union1"
			]
		}
	}
}