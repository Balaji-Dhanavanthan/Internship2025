{
	"name": "DF_STTM_DIM",
	"properties": {
		"folder": {
			"name": "Day 9_Training_I2025_SRangan1"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "SrcPhrmcy"
				},
				{
					"dataset": {
						"referenceName": "DS_Source_I2025_SRangan1",
						"type": "DatasetReference"
					},
					"name": "SrcLanguage"
				},
				{
					"dataset": {
						"referenceName": "DS_new_I2025_SRangan1",
						"type": "DatasetReference"
					},
					"name": "SrcStatus"
				},
				{
					"dataset": {
						"referenceName": "DS_STTM_I2025_SRangan1",
						"type": "DatasetReference"
					},
					"name": "DIMPTNT"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_STTM_I2025_SRangan1",
						"type": "DatasetReference"
					},
					"name": "sinkToPTNT"
				}
			],
			"transformations": [
				{
					"name": "DCconvertNull"
				},
				{
					"name": "PhrmcyName"
				},
				{
					"name": "DCPhrmcyCast"
				},
				{
					"name": "LanguageName"
				},
				{
					"name": "StatusName"
				},
				{
					"name": "PhrLeftJoinLang"
				},
				{
					"name": "PhrLeftJoinStatus"
				},
				{
					"name": "filter"
				},
				{
					"name": "DCTransformations"
				},
				{
					"name": "DCHandlingNull"
				},
				{
					"name": "Select"
				},
				{
					"name": "namePTNT"
				},
				{
					"name": "DCTypeCast"
				},
				{
					"name": "LeftJoinWithPTNT"
				},
				{
					"name": "split1"
				},
				{
					"name": "split2"
				},
				{
					"name": "update"
				},
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "newValue"
				},
				{
					"name": "DCHistory"
				},
				{
					"name": "select3"
				},
				{
					"name": "union1"
				},
				{
					"name": "PTNTKEY"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PHRMCY_NAT_PROV_ID_NBR as string,",
				"          PHRMCY_NCPDP_NBR as string,",
				"          PTNT_CD as string,",
				"          PSCB_FIRST_NM as string,",
				"          PSCB_LAST_NM as string,",
				"          LANG_CD as string,",
				"          DEAL_ID as string,",
				"          PHRMCY_NM as string,",
				"          PHRMCY_ST_ADDR_LINE1_TXT as string,",
				"          PHRMCY_ADDR_ZIP_CD as string,",
				"          PHRMCY_ADDR_CITY_NM as string,",
				"          PHRMCY_ADDR_ST_CD as string,",
				"          PHRMCY_ADDR_ST_NAME as string,",
				"          PHRMCY_ADDR_ZNE_CD as string,",
				"          PHRMCY_ADDR_ZNE_NM as string,",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SrcPhrmcy",
				"source(output(",
				"          LANG_ID as string,",
				"          LANG_CD as string,",
				"          LANG_DESC as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SrcLanguage",
				"source(output(",
				"          deal_id as string,",
				"          deal_nbr as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SrcStatus",
				"source(output(",
				"          PTNT_KEY as string,",
				"          PTNT_ID as string,",
				"          PTNT_CD as string,",
				"          PHRMCY_NCPDP_NBR as string,",
				"          PHRMCY_NAT_PROV_ID_NBR as string,",
				"          PSCB_FIRST_NM as string,",
				"          PSCB_LAST_NM as string,",
				"          PHRMCY_NM as string,",
				"          PHRMCY_ADDR_CITY_NM as string,",
				"          PHRMCY_ADDR_ST_NM as string,",
				"          PHRMCY_ADDR_ZNE_NM as string,",
				"          PHRMCY_ADDR_ZIP_CD as string,",
				"          PSCB_EMAIL_ID as string,",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT as string,",
				"          PHRMCY_SYS_IVR_DTA_STRT_QTR as string,",
				"          PHRMCY_SYS_IVR_DTA_STRT_YR as string,",
				"          PHRMCY_AGE as string,",
				"          DEAL_ID as string,",
				"          DEAL_TYPE_CD as string,",
				"          DEAL_NUMBER as string,",
				"          LANG_CD as string,",
				"          LANG_DESC as string,",
				"          RCD_CRT_TMS as string,",
				"          RCD_MOD_TMS as string,",
				"          START_DATE as string,",
				"          END_DATE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DIMPTNT",
				"SrcPhrmcy derive(each(match(type=='string'), $$ = case($$=='NULL', toString(null()),$$))) ~> DCconvertNull",
				"DCconvertNull select(mapColumn(",
				"          {p.PHRMCY_NAT_PROV_ID_NBR} = PHRMCY_NAT_PROV_ID_NBR,",
				"          {p.PHRMCY_NCPDP_NBR} = PHRMCY_NCPDP_NBR,",
				"          {p.PTNT_CD} = PTNT_CD,",
				"          {p.PSCB_FIRST_NM} = PSCB_FIRST_NM,",
				"          {p.PSCB_LAST_NM} = PSCB_LAST_NM,",
				"          {p.LANG_CD} = LANG_CD,",
				"          {p.DEAL_ID} = DEAL_ID,",
				"          {p.PHRMCY_NM} = PHRMCY_NM,",
				"          {p.PHRMCY_ST_ADDR_LINE1_TXT} = PHRMCY_ST_ADDR_LINE1_TXT,",
				"          {p.PHRMCY_ADDR_ZIP_CD} = PHRMCY_ADDR_ZIP_CD,",
				"          {p.PHRMCY_ADDR_CITY_NM} = PHRMCY_ADDR_CITY_NM,",
				"          {p.PHRMCY_ADDR_ST_CD} = PHRMCY_ADDR_ST_CD,",
				"          {p.PHRMCY_ADDR_ST_NAME} = PHRMCY_ADDR_ST_NAME,",
				"          {p.PHRMCY_ADDR_ZNE_CD} = PHRMCY_ADDR_ZNE_CD,",
				"          {p.PHRMCY_ADDR_ZNE_NM} = PHRMCY_ADDR_ZNE_NM,",
				"          {p.PHRMCY_SYS_IVR_DTA_STRT_DT} = PHRMCY_SYS_IVR_DTA_STRT_DT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> PhrmcyName",
				"PhrmcyName derive({p.PHRMCY_NCPDP_NBR} = toInteger({p.PHRMCY_NCPDP_NBR}),",
				"          {p.PHRMCY_ADDR_ZIP_CD} = toInteger({p.PHRMCY_ADDR_ZIP_CD}),",
				"          {p.PHRMCY_SYS_IVR_DTA_STRT_DT} = toDate({p.PHRMCY_SYS_IVR_DTA_STRT_DT}, 'dd-MM-yyyy HH:mm')) ~> DCPhrmcyCast",
				"SrcLanguage select(mapColumn(",
				"          {l.LANG_ID} = LANG_ID,",
				"          {l.LANG_CD} = LANG_CD,",
				"          {l.LANG_DESC} = LANG_DESC",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> LanguageName",
				"SrcStatus select(mapColumn(",
				"          {s.deal_id} = deal_id,",
				"          {s.deal_nbr} = deal_nbr",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> StatusName",
				"DCPhrmcyCast, LanguageName join({p.LANG_CD} == {l.LANG_CD},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> PhrLeftJoinLang",
				"PhrLeftJoinLang, StatusName join({p.DEAL_ID} == {s.deal_id}",
				"     && {p.DEAL_ID} == {s.deal_nbr},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> PhrLeftJoinStatus",
				"PhrLeftJoinStatus filter(in(['US', 'PR'],{p.PHRMCY_ADDR_ZNE_CD})) ~> filter",
				"filter derive(PTNT_ID = iif(isNull({p.PTNT_CD}), -1, toInteger(split({p.PTNT_CD}, '_')[1])),",
				"          PTNT_CD = substringIndex({p.PTNT_CD}, '_', -1),",
				"          PHRMCY_NCPDP_NBR = iif(isNull({p.PHRMCY_NCPDP_NBR}), -1,{p.PHRMCY_NCPDP_NBR}),",
				"          PHRMCY_NAT_PROV_ID_NBR = iif(isNull({p.PHRMCY_NAT_PROV_ID_NBR}), 'UNK',{p.PHRMCY_NAT_PROV_ID_NBR}),",
				"          PSCB_FIRST_NM = ({p.PSCB_FIRST_NM}),",
				"          PSCB_LAST_NM = ({p.PSCB_LAST_NM}),",
				"          PHRMCY_NM = regexReplace({p.PHRMCY_NM}, \"[,&'-]\", ' '),",
				"          PHRMCY_ADDR_CITY_NM = case(like(trim({p.PHRMCY_ADDR_CITY_NM}) ,'% %'), \r",
				"concat(left((regexSplit({p.PHRMCY_ADDR_CITY_NM},' ')[1]),1),\r",
				" left((regexSplit({p.PHRMCY_ADDR_CITY_NM},' ')[2]),1)) ,\r",
				"left({p.PHRMCY_ADDR_CITY_NM}, 3)),",
				"          PHRMCY_ADDR_ST_NM = initCap({p.PHRMCY_ADDR_ST_NAME}),",
				"          PHRMCY_ADDR_ZNE_NM = initCap({p.PHRMCY_ADDR_ZNE_NM}),",
				"          PHRMCY_ADDR_ZIP_CD = case(length(toString({p.PHRMCY_ADDR_ZIP_CD})) < 5, \r",
				"right(concat('00000', toString({p.PHRMCY_ADDR_ZIP_CD})),5), \r",
				"left(toString({p.PHRMCY_ADDR_ZIP_CD}), 5)),",
				"          PSCB_EMAIL_ID = concat(left(trim({p.PSCB_FIRST_NM}), length({p.PSCB_FIRST_NM})/2), left(({p.PSCB_LAST_NM}), 1), '@UN.com'),",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT = toString({p.PHRMCY_SYS_IVR_DTA_STRT_DT}, 'dd-MM-yyyy'),",
				"          PHRMCY_SYS_IVR_DTA_STRT_QTR = case(\r",
				"  month({p.PHRMCY_SYS_IVR_DTA_STRT_DT}) == 1 || \r",
				"  month({p.PHRMCY_SYS_IVR_DTA_STRT_DT}) == 2 || \r",
				"  month({p.PHRMCY_SYS_IVR_DTA_STRT_DT}) == 3, 'Q1',\r",
				"  month({p.PHRMCY_SYS_IVR_DTA_STRT_DT}) == 4 ||\r",
				"  month({p.PHRMCY_SYS_IVR_DTA_STRT_DT}) == 5 ||\r",
				"  month({p.PHRMCY_SYS_IVR_DTA_STRT_DT}) == 6, 'Q2',\r",
				"  month({p.PHRMCY_SYS_IVR_DTA_STRT_DT}) == 7 || \r",
				"  month({p.PHRMCY_SYS_IVR_DTA_STRT_DT}) == 8 || \r",
				"  month({p.PHRMCY_SYS_IVR_DTA_STRT_DT}) == 9, 'Q3',\r",
				"  month({p.PHRMCY_SYS_IVR_DTA_STRT_DT}) == 10 ||\r",
				"  month({p.PHRMCY_SYS_IVR_DTA_STRT_DT}) == 11 || \r",
				"  month({p.PHRMCY_SYS_IVR_DTA_STRT_DT}) == 12, 'Q4'\r",
				") + '-' + toString(year({p.PHRMCY_SYS_IVR_DTA_STRT_DT})),",
				"          PHRMCY_SYS_IVR_DTA_STRT_YR = toString(year(toTimestamp({p.PHRMCY_SYS_IVR_DTA_STRT_DT}, 'dd-MM-yyyy', 'HH:mm'))),",
				"          PHRMCY_AGE = toInteger(year(currentTimestamp()) - year({p.PHRMCY_SYS_IVR_DTA_STRT_DT})),",
				"          DEAL_ID = case(in([{s.deal_id},{s.deal_nbr}], {p.DEAL_ID}), 'Exists', 'NotExist'),",
				"          DEAL_TYPE_CD = left({s.deal_nbr},2),",
				"          DEAL_NUMBER = substring({s.deal_nbr}, 2, length({s.deal_nbr})),",
				"          LANG_CD = {l.LANG_CD},",
				"          LANG_DESC = {l.LANG_DESC},",
				"          RCD_CRT_TMS = currentTimestamp(),",
				"          START_DATE = currentTimestamp()) ~> DCTransformations",
				"DCTransformations derive(each(match(type=='string'), $$ = iifNull($$, 'UNK', $$)),",
				"          each(match(type=='Integer'), $$ = iifNull($#, -1, $#))) ~> DCHandlingNull",
				"DCHandlingNull select(mapColumn(",
				"          {n.PTNT_ID} = PTNT_ID,",
				"          {n.PTNT_CD} = PTNT_CD,",
				"          {n.PHRMCY_NCPDP_NBR} = PHRMCY_NCPDP_NBR,",
				"          {n.PHRMCY_NAT_PROV_ID_NBR} = PHRMCY_NAT_PROV_ID_NBR,",
				"          {n.PSCB_FIRST_NM} = PSCB_FIRST_NM,",
				"          {n.PSCB_LAST_NM} = PSCB_LAST_NM,",
				"          {n.PHRMCY_NM} = PHRMCY_NM,",
				"          {n.PHRMCY_ADDR_CITY_NM} = PHRMCY_ADDR_CITY_NM,",
				"          {n.PHRMCY_ADDR_ST_NM} = PHRMCY_ADDR_ST_NM,",
				"          {n.PHRMCY_ADDR_ZNE_NM} = PHRMCY_ADDR_ZNE_NM,",
				"          {n.PHRMCY_ADDR_ZIP_CD} = PHRMCY_ADDR_ZIP_CD,",
				"          {n.PSCB_EMAIL_ID} = PSCB_EMAIL_ID,",
				"          {n.PHRMCY_SYS_IVR_DTA_STRT_DT} = PHRMCY_SYS_IVR_DTA_STRT_DT,",
				"          {n.PHRMCY_SYS_IVR_DTA_STRT_QTR} = PHRMCY_SYS_IVR_DTA_STRT_QTR,",
				"          {n.PHRMCY_SYS_IVR_DTA_STRT_YR} = PHRMCY_SYS_IVR_DTA_STRT_YR,",
				"          {n.PHRMCY_AGE} = PHRMCY_AGE,",
				"          {n.DEAL_ID} = DEAL_ID,",
				"          {n.DEAL_TYPE_CD} = DEAL_TYPE_CD,",
				"          {n.DEAL_NUMBER} = DEAL_NUMBER,",
				"          {n.LANG_CD} = LANG_CD,",
				"          {n.LANG_DESC} = LANG_DESC,",
				"          {n.RCD_CRT_TMS} = RCD_CRT_TMS,",
				"          {n.START_DATE} = START_DATE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Select",
				"DIMPTNT select(mapColumn(",
				"          each(match(true()),",
				"               'D.'+$$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> namePTNT",
				"namePTNT derive({D.PTNT_KEY} = toInteger({D.PTNT_KEY}),",
				"          {D.PTNT_ID} = toInteger({D.PTNT_ID}),",
				"          {D.PHRMCY_NCPDP_NBR} = toInteger({D.PHRMCY_NCPDP_NBR}),",
				"          {D.PHRMCY_AGE} = toInteger({D.PHRMCY_AGE}),",
				"          {D.RCD_CRT_TMS} = toTimestamp({D.RCD_CRT_TMS},'yyyy-MM-dd HH:mm:ss'),",
				"          {D.RCD_MOD_TMS} = toTimestamp({D.RCD_MOD_TMS},'yyyy-MM-dd HH:mm:ss'),",
				"          {D.START_DATE} = toTimestamp({D.START_DATE},'yyyy-MM-dd HH:mm:ss'),",
				"          {D.END_DATE} = toTimestamp({D.END_DATE},'yyyy-MM-dd HH:mm:ss')) ~> DCTypeCast",
				"Select, DCTypeCast join({n.PTNT_CD} == {D.PTNT_CD},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftJoinWithPTNT",
				"LeftJoinWithPTNT split(isNull({D.PTNT_CD})&& isNull({D.RCD_MOD_TMS}),",
				"     disjoint: false) ~> split1@(insert, updateandexists)",
				"split1@updateandexists split({n.PHRMCY_ADDR_ZIP_CD}!={D.PHRMCY_ADDR_ZIP_CD}&& isNull({D.RCD_MOD_TMS}),",
				"     disjoint: false) ~> split2@(updated, exists)",
				"split2@updated alterRow(upsertIf({n.PHRMCY_ADDR_ZIP_CD}!={D.PHRMCY_ADDR_ZIP_CD})) ~> update",
				"update select(mapColumn(",
				"          PTNT_ID = {n.PTNT_ID},",
				"          PTNT_CD = {n.PTNT_CD},",
				"          PHRMCY_NCPDP_NBR = {n.PHRMCY_NCPDP_NBR},",
				"          PHRMCY_NAT_PROV_ID_NBR = {n.PHRMCY_NAT_PROV_ID_NBR},",
				"          PSCB_FIRST_NM = {n.PSCB_FIRST_NM},",
				"          PSCB_LAST_NM = {n.PSCB_LAST_NM},",
				"          PHRMCY_NM = {n.PHRMCY_NM},",
				"          PHRMCY_ADDR_CITY_NM = {n.PHRMCY_ADDR_CITY_NM},",
				"          PHRMCY_ADDR_ST_NM = {n.PHRMCY_ADDR_ST_NM},",
				"          PHRMCY_ADDR_ZNE_NM = {n.PHRMCY_ADDR_ZNE_NM},",
				"          PHRMCY_ADDR_ZIP_CD = {n.PHRMCY_ADDR_ZIP_CD},",
				"          PSCB_EMAIL_ID = {n.PSCB_EMAIL_ID},",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT = {n.PHRMCY_SYS_IVR_DTA_STRT_DT},",
				"          PHRMCY_SYS_IVR_DTA_STRT_QTR = {n.PHRMCY_SYS_IVR_DTA_STRT_QTR},",
				"          PHRMCY_SYS_IVR_DTA_STRT_YR = {n.PHRMCY_SYS_IVR_DTA_STRT_YR},",
				"          PHRMCY_AGE = {n.PHRMCY_AGE},",
				"          DEAL_ID = {n.DEAL_ID},",
				"          DEAL_TYPE_CD = {n.DEAL_TYPE_CD},",
				"          DEAL_NUMBER = {n.DEAL_NUMBER},",
				"          LANG_CD = {n.LANG_CD},",
				"          LANG_DESC = {n.LANG_DESC},",
				"          RCD_CRT_TMS = {n.RCD_CRT_TMS},",
				"          START_DATE = {n.START_DATE}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"split1@insert select(mapColumn(",
				"          PTNT_ID = {n.PTNT_ID},",
				"          PTNT_CD = {n.PTNT_CD},",
				"          PHRMCY_NCPDP_NBR = {n.PHRMCY_NCPDP_NBR},",
				"          PHRMCY_NAT_PROV_ID_NBR = {n.PHRMCY_NAT_PROV_ID_NBR},",
				"          PSCB_FIRST_NM = {n.PSCB_FIRST_NM},",
				"          PSCB_LAST_NM = {n.PSCB_LAST_NM},",
				"          PHRMCY_NM = {n.PHRMCY_NM},",
				"          PHRMCY_ADDR_CITY_NM = {n.PHRMCY_ADDR_CITY_NM},",
				"          PHRMCY_ADDR_ST_NM = {n.PHRMCY_ADDR_ST_NM},",
				"          PHRMCY_ADDR_ZNE_NM = {n.PHRMCY_ADDR_ZNE_NM},",
				"          PHRMCY_ADDR_ZIP_CD = {n.PHRMCY_ADDR_ZIP_CD},",
				"          PSCB_EMAIL_ID = {n.PSCB_EMAIL_ID},",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT = {n.PHRMCY_SYS_IVR_DTA_STRT_DT},",
				"          PHRMCY_SYS_IVR_DTA_STRT_QTR = {n.PHRMCY_SYS_IVR_DTA_STRT_QTR},",
				"          PHRMCY_SYS_IVR_DTA_STRT_YR = {n.PHRMCY_SYS_IVR_DTA_STRT_YR},",
				"          PHRMCY_AGE = {n.PHRMCY_AGE},",
				"          DEAL_ID = {n.DEAL_ID},",
				"          DEAL_TYPE_CD = {n.DEAL_TYPE_CD},",
				"          DEAL_NUMBER = {n.DEAL_NUMBER},",
				"          LANG_CD = {n.LANG_CD},",
				"          LANG_DESC = {n.LANG_DESC},",
				"          RCD_CRT_TMS = {n.RCD_CRT_TMS},",
				"          START_DATE = {n.START_DATE}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"update select(mapColumn(",
				"          PTNT_ID = {n.PTNT_ID},",
				"          PTNT_CD = {n.PTNT_CD},",
				"          PHRMCY_NCPDP_NBR = {n.PHRMCY_NCPDP_NBR},",
				"          PHRMCY_NAT_PROV_ID_NBR = {n.PHRMCY_NAT_PROV_ID_NBR},",
				"          PSCB_FIRST_NM = {n.PSCB_FIRST_NM},",
				"          PSCB_LAST_NM = {n.PSCB_LAST_NM},",
				"          PHRMCY_NM = {n.PHRMCY_NM},",
				"          PHRMCY_ADDR_CITY_NM = {n.PHRMCY_ADDR_CITY_NM},",
				"          PHRMCY_ADDR_ST_NM = {n.PHRMCY_ADDR_ST_NM},",
				"          PHRMCY_ADDR_ZNE_NM = {n.PHRMCY_ADDR_ZNE_NM},",
				"          PHRMCY_ADDR_ZIP_CD = {n.PHRMCY_ADDR_ZIP_CD},",
				"          PSCB_EMAIL_ID = {n.PSCB_EMAIL_ID},",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT = {n.PHRMCY_SYS_IVR_DTA_STRT_DT},",
				"          PHRMCY_SYS_IVR_DTA_STRT_QTR = {n.PHRMCY_SYS_IVR_DTA_STRT_QTR},",
				"          PHRMCY_SYS_IVR_DTA_STRT_YR = {n.PHRMCY_SYS_IVR_DTA_STRT_YR},",
				"          PHRMCY_AGE = {n.PHRMCY_AGE},",
				"          DEAL_ID = {n.DEAL_ID},",
				"          DEAL_TYPE_CD = {n.DEAL_TYPE_CD},",
				"          DEAL_NUMBER = {n.DEAL_NUMBER},",
				"          LANG_CD = {n.LANG_CD},",
				"          LANG_DESC = {n.LANG_DESC},",
				"          RCD_CRT_TMS = {n.RCD_CRT_TMS},",
				"          START_DATE = {n.START_DATE}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> newValue",
				"select1 derive(RCD_MOD_TMS = currentTimestamp(),",
				"          END_DATE = currentTimestamp()) ~> DCHistory",
				"split2@exists select(mapColumn(",
				"          PTNT_KEY = {D.PTNT_KEY},",
				"          PTNT_ID = {D.PTNT_ID},",
				"          PTNT_CD = {D.PTNT_CD},",
				"          PHRMCY_NCPDP_NBR = {D.PHRMCY_NCPDP_NBR},",
				"          PHRMCY_NAT_PROV_ID_NBR = {D.PHRMCY_NAT_PROV_ID_NBR},",
				"          PSCB_FIRST_NM = {D.PSCB_FIRST_NM},",
				"          PSCB_LAST_NM = {D.PSCB_LAST_NM},",
				"          PHRMCY_NM = {D.PHRMCY_NM},",
				"          PHRMCY_ADDR_CITY_NM = {D.PHRMCY_ADDR_CITY_NM},",
				"          PHRMCY_ADDR_ST_NM = {D.PHRMCY_ADDR_ST_NM},",
				"          PHRMCY_ADDR_ZNE_NM = {D.PHRMCY_ADDR_ZNE_NM},",
				"          PHRMCY_ADDR_ZIP_CD = {D.PHRMCY_ADDR_ZIP_CD},",
				"          PSCB_EMAIL_ID = {D.PSCB_EMAIL_ID},",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT = {D.PHRMCY_SYS_IVR_DTA_STRT_DT},",
				"          PHRMCY_SYS_IVR_DTA_STRT_QTR = {D.PHRMCY_SYS_IVR_DTA_STRT_QTR},",
				"          PHRMCY_SYS_IVR_DTA_STRT_YR = {D.PHRMCY_SYS_IVR_DTA_STRT_YR},",
				"          PHRMCY_AGE = {D.PHRMCY_AGE},",
				"          DEAL_ID = {D.DEAL_ID},",
				"          DEAL_TYPE_CD = {D.DEAL_TYPE_CD},",
				"          DEAL_NUMBER = {D.DEAL_NUMBER},",
				"          LANG_CD = {D.LANG_CD},",
				"          LANG_DESC = {D.LANG_DESC},",
				"          RCD_CRT_TMS = {D.RCD_CRT_TMS},",
				"          RCD_MOD_TMS = {D.RCD_MOD_TMS},",
				"          START_DATE = {D.START_DATE},",
				"          END_DATE = {D.END_DATE}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select2, newValue, DCHistory, select3 union(byName: true)~> union1",
				"union1 keyGenerate(output(PTNT_KEY as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> PTNTKEY",
				"PTNTKEY sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['DIM_PTNT.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkToPTNT"
			]
		}
	}
}