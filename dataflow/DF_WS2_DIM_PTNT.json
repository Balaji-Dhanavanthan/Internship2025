{
	"name": "DF_WS2_DIM_PTNT",
	"properties": {
		"folder": {
			"name": "Workshop 2"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_CSV_test",
						"type": "DatasetReference"
					},
					"name": "LangSrc"
				},
				{
					"dataset": {
						"referenceName": "DS_CSV_test",
						"type": "DatasetReference"
					},
					"name": "statusSrc"
				},
				{
					"dataset": {
						"referenceName": "DS_CSV_test",
						"type": "DatasetReference"
					},
					"name": "PharmSrcNew"
				},
				{
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "SelectedNullHandling"
				},
				{
					"name": "NewPharmLangLeftJoin"
				},
				{
					"name": "NewLeftStatus"
				},
				{
					"name": "DynamicNullHandling1"
				},
				{
					"name": "selectForSurrogateKey1"
				},
				{
					"name": "AddingSurrogateKey"
				},
				{
					"name": "AllTransformationss"
				},
				{
					"name": "FilterOnlyUSandPR"
				},
				{
					"name": "FinSelectOrdered"
				},
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          LANG_ID as integer,",
				"          LANG_CD as string,",
				"          LANG_DESC as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LangSrc",
				"source(output(",
				"          deal_id as string,",
				"          deal_nbr as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> statusSrc",
				"source(output(",
				"          PHRMCY_NAT_PROV_ID_NBR as string,",
				"          PHRMCY_NCPDP_NBR as string,",
				"          PTNT_CD as string,",
				"          PSCB_FIRST_NM as string,",
				"          PSCB_LAST_NM as string,",
				"          LANG_CD as string,",
				"          DEAL_ID as string,",
				"          PHRMCY_NM as string,",
				"          PHRMCY_ST_ADDR_LINE1_TXT as string,",
				"          PHRMCY_ADDR_ZIP_CD as string,",
				"          PHRMCY_ADDR_CITY_NM as string,",
				"          PHRMCY_ADDR_ST_CD as string,",
				"          PHRMCY_ADDR_ST_NAME as string,",
				"          PHRMCY_ADDR_ZNE_CD as string,",
				"          PHRMCY_ADDR_ZNE_NM as string,",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> PharmSrcNew",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false) ~> source1",
				"AddingSurrogateKey derive(PHRMCY_NAT_PROV_ID_NBR = iif(PHRMCY_NAT_PROV_ID_NBR == 'NULL', -1, toInteger(PHRMCY_NAT_PROV_ID_NBR)),",
				"          PHRMCY_NCPDP_NBR = iif(PHRMCY_NCPDP_NBR == 'NULL', -1, toInteger(PHRMCY_NCPDP_NBR)),",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT = iif(PHRMCY_SYS_IVR_DTA_STRT_DT == 'NULL' || isNull(PHRMCY_SYS_IVR_DTA_STRT_DT), '31-12-2999 00:00', PHRMCY_SYS_IVR_DTA_STRT_DT),",
				"          PTNT_KEY = toInteger(PTNT_KEY)) ~> SelectedNullHandling",
				"FilterOnlyUSandPR, LangSrc join(PharmSrcNew@LANG_CD == LangSrc@LANG_CD,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> NewPharmLangLeftJoin",
				"NewPharmLangLeftJoin, statusSrc join(PharmSrcNew@DEAL_ID == statusSrc@deal_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> NewLeftStatus",
				"SelectedNullHandling derive(each(match(type=='string'), $$ = iif(isNull($$) || $$ == 'NULL', 'UNK', $$))) ~> DynamicNullHandling1",
				"NewLeftStatus select(mapColumn(",
				"          PHRMCY_NAT_PROV_ID_NBR,",
				"          PHRMCY_NCPDP_NBR,",
				"          PTNT_CD,",
				"          PSCB_FIRST_NM,",
				"          PSCB_LAST_NM,",
				"          LANG_CD = PharmSrcNew@LANG_CD,",
				"          DEAL_ID = PharmSrcNew@DEAL_ID,",
				"          PHRMCY_NM,",
				"          PHRMCY_ST_ADDR_LINE1_TXT,",
				"          PHRMCY_ADDR_ZIP_CD,",
				"          PHRMCY_ADDR_CITY_NM,",
				"          PHRMCY_ADDR_ST_CD,",
				"          PHRMCY_ADDR_ST_NAME,",
				"          PHRMCY_ADDR_ZNE_CD,",
				"          PHRMCY_ADDR_ZNE_NM,",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT,",
				"          LANG_CD = LangSrc@LANG_CD,",
				"          LANG_DESC,",
				"          deal_id = statusSrc@deal_id,",
				"          deal_nbr",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectForSurrogateKey1",
				"selectForSurrogateKey1 keyGenerate(output(PTNT_KEY as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> AddingSurrogateKey",
				"DynamicNullHandling1 derive(PTNT_ID = toInteger(at(split(PTNT_CD, '_'), 1)),",
				"          PTNT_CD = right(PTNT_CD, 4),",
				"          PHRMCY_NM = replace(replace(replace(PHRMCY_NM, '_', ' '), '-', ' '), \"'\", ' '),",
				"          PHRMCY_ADDR_CITY_NM = iif(size(split(trim(PHRMCY_ADDR_CITY_NM), ' ')) > 1, \r",
				"    concat(\r",
				"        upper(left(at(split(trim(PHRMCY_ADDR_CITY_NM), ' '), 1), 1)), \r",
				"        upper(left(at(split(trim(PHRMCY_ADDR_CITY_NM), ' '), 2), 1))\r",
				"    ), \r",
				"    upper(substring(trim(PHRMCY_ADDR_CITY_NM), 1, 3))\r",
				"),",
				"          PHRMCY_ADDR_ST_NAME = iif(PHRMCY_ADDR_ST_NAME != 'UNK', initCap(PHRMCY_ADDR_ST_NAME), PHRMCY_ADDR_ST_NAME),",
				"          PHRMCY_ADDR_ZNE_NM = iif(PHRMCY_ADDR_ZNE_NM == 'NULL', PHRMCY_ADDR_ZNE_NM, initCap(PHRMCY_ADDR_ZNE_NM)),",
				"          PHRMCY_ADDR_ZIP_CD = iif(length(PHRMCY_ADDR_ZIP_CD) < 5 && PHRMCY_ADDR_ZIP_CD != 'UNK', \r",
				"    lpad(PHRMCY_ADDR_ZIP_CD, 5, '0'),\r",
				"    substring(PHRMCY_ADDR_ZIP_CD, 1, 5)\r",
				"),",
				"          PSCB_EMAIL_ID = concat(\r",
				"    left(trim(PSCB_FIRST_NM), toInteger(round(length(trim(PSCB_FIRST_NM)) * 1/2))),\r",
				"    left(trim(PSCB_LAST_NM), 1),\r",
				"    '@UN.com'\r",
				"),",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT = toString(toDate(PHRMCY_SYS_IVR_DTA_STRT_DT,'dd-MM-yyyy'), 'dd-MMM-yyyy'),",
				"          PHRMCY_SYS_IVR_DTA_STRT_QTR = concat(\r",
				"    iif(\r",
				"        month(toDate(PHRMCY_SYS_IVR_DTA_STRT_DT, 'dd-MM-yyyy')) <= 3, 'Q1',\r",
				"        iif(\r",
				"            month(toDate(PHRMCY_SYS_IVR_DTA_STRT_DT, 'dd-MM-yyyy')) <= 6, 'Q2',\r",
				"            iif(month(toDate(PHRMCY_SYS_IVR_DTA_STRT_DT, 'dd-MM-yyyy')) <= 9, \r",
				"            'Q3', \r",
				"            'Q4'\r",
				"            )\r",
				"        )\r",
				"    ),\r",
				"    '-',\r",
				"    toString(year(toDate(PHRMCY_SYS_IVR_DTA_STRT_DT, 'dd-MM-yyyy')))\r",
				"),",
				"          PHRMCY_SYS_IVR_DTA_STRT_YR = toString(toDate(PHRMCY_SYS_IVR_DTA_STRT_DT, 'dd-MM-yyyy'), 'yyyy'),",
				"          PHRMCY_AGE = iif(PHRMCY_SYS_IVR_DTA_STRT_DT == '31-12-2999 00:00', -1,\r",
				"    year(currentDate()) - year(toDate(PHRMCY_SYS_IVR_DTA_STRT_DT, 'dd-MM-yyyy'))\r",
				"),",
				"          DEAL_TYPE_CD = iif(deal_nbr == 'UNK', 'UNK', left(deal_nbr, 2)),",
				"          DEAL_NUMBER = iif(deal_nbr == 'UNK', 'UNK',\r",
				"    substring(deal_nbr, 3, length(deal_nbr))\r",
				"),",
				"          RCD_CRT_TMS = currentTimestamp(),",
				"          RCD_MOD_TMS = '',",
				"          START_DATE = currentDate(),",
				"          END_DATE = '') ~> AllTransformationss",
				"PharmSrcNew filter(equals(PHRMCY_ADDR_ZNE_CD, 'US') || equals(PHRMCY_ADDR_ZNE_CD, 'PR')) ~> FilterOnlyUSandPR",
				"AllTransformationss select(mapColumn(",
				"          PTNT_KEY,",
				"          PTNT_ID,",
				"          PTNT_CD,",
				"          PHRMCY_NCPDP_NBR,",
				"          PHRMCY_NAT_PROV_ID_NBR,",
				"          PSCB_FIRST_NM,",
				"          PSCB_LAST_NM,",
				"          PHRMCY_NM,",
				"          PHRMCY_ADDR_CITY_NM,",
				"          PHRMCY_ADDR_ST_NM = PHRMCY_ADDR_ST_NAME,",
				"          PHRMCY_ADDR_ZNE_NM,",
				"          PHRMCY_ADDR_ZIP_CD,",
				"          PSCB_EMAIL_ID,",
				"          PHRMCY_SYS_IVR_DTA_STRT_DT,",
				"          PHRMCY_SYS_IVR_DTA_STRT_QTR,",
				"          PHRMCY_SYS_IVR_DTA_STRT_YR,",
				"          PHRMCY_AGE,",
				"          DEAL_ID = DynamicNullHandling1@DEAL_ID,",
				"          DEAL_TYPE_CD,",
				"          DEAL_NUMBER,",
				"          LANG_CD,",
				"          LANG_DESC,",
				"          RCD_CRT_TMS,",
				"          RCD_MOD_TS = RCD_MOD_TMS,",
				"          START_DATE,",
				"          END_DATE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> FinSelectOrdered",
				"FinSelectOrdered split(ERROR_FUNCTION(''),",
				"     disjoint: false) ~> split1@(, )"
			]
		}
	}
}