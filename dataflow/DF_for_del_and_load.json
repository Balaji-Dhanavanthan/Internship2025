{
	"name": "DF_for_del_and_load",
	"properties": {
		"folder": {
			"name": "old/prev"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_CSV_test",
						"type": "DatasetReference"
					},
					"name": "srcCsv"
				},
				{
					"dataset": {
						"referenceName": "DS_CSV_test",
						"type": "DatasetReference"
					},
					"name": "tgtCsv"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_CSV_test",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DS_CSV_test",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "srcLeftJointgt"
				},
				{
					"name": "srcCsvSel"
				},
				{
					"name": "deleteCommon"
				},
				{
					"name": "loadTgt"
				}
			],
			"scriptLines": [
				"source(output(",
				"          emp_id as short,",
				"          first_name as string,",
				"          last_name as string,",
				"          salary as double,",
				"          created_date as string,",
				"          update_date as string,",
				"          filename as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> srcCsv",
				"source(output(",
				"          emp_id as short,",
				"          first_name as string,",
				"          last_name as string,",
				"          salary as double,",
				"          created_date as string,",
				"          update_date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> tgtCsv",
				"srcCsvSel, tgtCsv join(srcCsvSel@emp_id == tgtCsv@emp_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> srcLeftJointgt",
				"srcCsv select(mapColumn(",
				"          emp_id,",
				"          first_name,",
				"          last_name,",
				"          salary,",
				"          created_date,",
				"          update_date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> srcCsvSel",
				"srcLeftJointgt alterRow(deleteIf(tgtCsv@emp_id==srcCsvSel@emp_id)) ~> deleteCommon",
				"srcLeftJointgt alterRow(insertIf(isNull(tgtCsv@emp_id))) ~> loadTgt",
				"loadTgt sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['new_target_employees.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"deleteCommon sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['new_target_employees.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}