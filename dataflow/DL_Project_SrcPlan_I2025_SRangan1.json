{
	"name": "DL_Project_SrcPlan_I2025_SRangan1",
	"properties": {
		"folder": {
			"name": "DF_TDSG_Project_Scenario"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "SrcPlan"
				},
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "SrcPlan2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_new_I2025_SRangan1",
						"type": "DatasetReference"
					},
					"name": "sinkPlan"
				},
				{
					"dataset": {
						"referenceName": "DS_STTM_I2025_SRangan1",
						"type": "DatasetReference"
					},
					"name": "sinkPlan2"
				}
			],
			"transformations": [
				{
					"name": "DCtoDate"
				},
				{
					"name": "DCchangetoDate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          MaterialCode as string,",
				"          ForecastDate as string,",
				"          Plan as short,",
				"          TrialProduct as string,",
				"          IsActive as string,",
				"          RevisionNumber as integer,",
				"          RevisionComment as string,",
				"          Line as string,",
				"          CreatedOn as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SrcPlan",
				"source(output(",
				"          MaterialCode as string,",
				"          ForecastDate as string,",
				"          Plan as short,",
				"          TrialProduct as string,",
				"          IsActive as string,",
				"          RevisionNumber as integer,",
				"          RevisionComment as string,",
				"          Line as string,",
				"          CreatedOn as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SrcPlan2",
				"SrcPlan derive(CreatedOn = case(CreatedOn == 'getdate()', currentDate(),toDate(null())),",
				"          ForecastDate = toDate(ForecastDate, 'dd-MM-yyyy')) ~> DCtoDate",
				"SrcPlan2 derive(CreatedOn = case(CreatedOn == 'getdate()', currentDate(), toDate(null())),",
				"          ForecastDate = toDate(ForecastDate, 'dd-MM-yyyy')) ~> DCchangetoDate",
				"DCtoDate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Prop_0 as string,",
				"          match_id as string,",
				"          date as string,",
				"          match_type as string,",
				"          event_name as string,",
				"          innings as string,",
				"          batting_team as string,",
				"          bowling_team as string,",
				"          over as string,",
				"          ball as string,",
				"          ball_no as string,",
				"          batter as string,",
				"          bat_pos as string,",
				"          runs_batter as string,",
				"          balls_faced as string,",
				"          bowler as string,",
				"          valid_ball as string,",
				"          runs_extras as string,",
				"          runs_total as string,",
				"          runs_bowler as string,",
				"          runs_not_boundary as string,",
				"          extra_type as string,",
				"          non_striker as string,",
				"          non_striker_pos as string,",
				"          wicket_kind as string,",
				"          player_out as string,",
				"          fielders as string,",
				"          runs_target as string,",
				"          review_batter as string,",
				"          team_reviewed as string,",
				"          review_decision as string,",
				"          umpire as string,",
				"          umpires_call as string,",
				"          player_of_match as string,",
				"          match_won_by as string,",
				"          win_outcome as string,",
				"          toss_winner as string,",
				"          toss_decision as string,",
				"          venue as string,",
				"          city as string,",
				"          day as string,",
				"          month as string,",
				"          year as string,",
				"          season as string,",
				"          gender as string,",
				"          team_type as string,",
				"          superover_winner as string,",
				"          result_type as string,",
				"          method as string,",
				"          balls_per_over as string,",
				"          overs as string,",
				"          event_match_no as string,",
				"          stage as string,",
				"          match_number as string,",
				"          team_runs as string,",
				"          team_balls as string,",
				"          team_wicket as string,",
				"          new_batter as string,",
				"          batter_runs as string,",
				"          batter_balls as string,",
				"          bowler_wicket as string,",
				"          batting_partners as string,",
				"          next_batter as string,",
				"          striker_out as string",
				"     ),",
				"     partitionFileNames:['Updated_ProductionPlan.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkPlan",
				"DCchangetoDate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Updated_ProductionPlan2.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkPlan2"
			]
		}
	}
}