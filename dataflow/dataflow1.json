{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Excel1_I2025JNagara1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_I2025_JNagara1_blob",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "DS_Blob_storgare",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Survey ID} as integer,",
				"          {Feedback Program} as string,",
				"          {First name} as string,",
				"          {Last name} as string,",
				"          {Contact Name} as string,",
				"          Email as string,",
				"          {PHONE NUMBER} as long,",
				"          {Contact Country} as string,",
				"          {Job Title} as string,",
				"          {Contact Department} as string,",
				"          Language as string,",
				"          Salutation as string,",
				"          Ship_to as string,",
				"          {Ship to} as string,",
				"          Sold_to as string,",
				"          {Sold to} as string,",
				"          {Lead Contact OD} as string,",
				"          {Lead Contact GBU/RBU} as string,",
				"          {Lead Contact SBU} as string,",
				"          {Main Industry} as string,",
				"          Region as string,",
				"          {Sales Channel} as string,",
				"          {Customer Network} as boolean,",
				"          {Lead Contact Segmentation1} as string,",
				"          {Lead Contact Segmentation2} as string,",
				"          {Invitation Status} as string,",
				"          Creationdate as string,",
				"          {Invitation date} as string,",
				"          {Local Invitation Date} as string,",
				"          {Survey status} as string,",
				"          {Expires on date} as string,",
				"          {Local Expiration Date} as string,",
				"          {Reason for Score} as string,",
				"          {Ease of doing business} as short,",
				"          {Issue Resolution} as short,",
				"          {Product Quality} as short,",
				"          {Delivery Reliability} as short,",
				"          {Understanding your business needs} as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          {Survey ID},",
				"          {Contact Name},",
				"          Email,",
				"          {PHONE NUMBER},",
				"          {Job Title},",
				"          {Ship to},",
				"          {Sold to},",
				"          {Lead Contact SBU},",
				"          {Main Industry},",
				"          {Lead Contact Segmentation1},",
				"          {Invitation Status},",
				"          Creationdate,",
				"          {Invitation date},",
				"          {Local Invitation Date},",
				"          {Survey status},",
				"          {Expires on date},",
				"          {Local Expiration Date},",
				"          {Reason for Score},",
				"          {Ease of doing business},",
				"          {Issue Resolution},",
				"          {Product Quality},",
				"          {Delivery Reliability},",
				"          {Understanding your business needs}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 filter({Invitation Status} == 'Completed' && {Product Quality} < 6) ~> filter1",
				"filter1 keyGenerate(output(created_by as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(CREATE_BY = 'I2025_JNagara1',",
				"          each(match(type == 'integer'), $$ = iifNull($#, 0)),",
				"          each(match(type == 'string'), $$ = iifNull($$, 'UNK')),",
				"          created_time = currentTimestamp(),",
				"          file_name = 'BASK Invitation Dataset.xlsx') ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          {Survey ID},",
				"          {Contact Name},",
				"          Email,",
				"          {PHONE NUMBER},",
				"          {Job Title},",
				"          {Ship to},",
				"          {Sold to},",
				"          {Lead Contact SBU},",
				"          {Main Industry},",
				"          {Lead Contact Segmentation1},",
				"          {Invitation Status},",
				"          Creationdate,",
				"          {Invitation date},",
				"          {Local Invitation Date},",
				"          {Survey status},",
				"          {Expires on date},",
				"          {Local Expiration Date},",
				"          {Reason for Score},",
				"          {Ease of doing business},",
				"          {Issue Resolution},",
				"          {Product Quality},",
				"          {Delivery Reliability},",
				"          {Understanding your business needs},",
				"          created_by,",
				"          CREATE_BY,",
				"          created_time,",
				"          file_name",
				"     )) ~> sink1"
			]
		}
	}
}