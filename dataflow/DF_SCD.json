{
	"name": "DF_SCD",
	"properties": {
		"folder": {
			"name": "practice"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "SrcEmp"
				},
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "SrcEmpTgt"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "InsertSink"
				},
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "UpdateSink"
				}
			],
			"transformations": [
				{
					"name": "EmpJoinEmpTgt"
				},
				{
					"name": "AuditColSrc"
				},
				{
					"name": "Tranformations"
				},
				{
					"name": "Split"
				},
				{
					"name": "UpdatingColumns"
				},
				{
					"name": "UpdateCond"
				}
			],
			"scriptLines": [
				"source(output(",
				"          employee_id as short,",
				"          first_name as string,",
				"          last_name as string,",
				"          email as string,",
				"          phone_number as string,",
				"          hire_date as string,",
				"          job_id as string,",
				"          salary as double,",
				"          commission_pct as double,",
				"          manager_id as short,",
				"          department_id as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SrcEmp",
				"source(output(",
				"          employee_id as short,",
				"          first_name as string,",
				"          last_name as string,",
				"          email as string,",
				"          phone_number as string,",
				"          hire_date as string,",
				"          job_id as string,",
				"          salary as double,",
				"          commission_pct as double,",
				"          manager_id as short,",
				"          department_id as short,",
				"          created_by as string,",
				"          created_at as date,",
				"          updated_by as string,",
				"          updated_at as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SrcEmpTgt",
				"AuditColSrc, SrcEmpTgt join(SrcEmp@employee_id == SrcEmpTgt@employee_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> EmpJoinEmpTgt",
				"SrcEmp derive(created_date = currentDate(),",
				"          updated_date = currentDate(),",
				"          created_by = 'aabidh',",
				"          updated_by = 'aabidh') ~> AuditColSrc",
				"EmpJoinEmpTgt derive(first_name = initCap(SrcEmp@first_name)) ~> Tranformations",
				"Tranformations split((SrcEmp@employee_id == SrcEmpTgt@employee_id) && ((SrcEmp@phone_number != SrcEmpTgt@phone_number) || (SrcEmp@department_id != SrcEmpTgt@department_id)),",
				"     disjoint: false) ~> Split@(Update, Insert)",
				"Split@Update derive(updated_by = 'aabidh',",
				"          updated_at = currentDate(),",
				"          phone_number = Split@Update@phone_number,",
				"          department_id = Split@Update@department_id) ~> UpdatingColumns",
				"UpdatingColumns alterRow(updateIf(true())) ~> UpdateCond",
				"Split@Insert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Prop_0 as string,",
				"          match_id as string,",
				"          date as string,",
				"          match_type as string,",
				"          event_name as string,",
				"          innings as string,",
				"          batting_team as string,",
				"          bowling_team as string,",
				"          over as string,",
				"          ball as string,",
				"          ball_no as string,",
				"          batter as string,",
				"          bat_pos as string,",
				"          runs_batter as string,",
				"          balls_faced as string,",
				"          bowler as string,",
				"          valid_ball as string,",
				"          runs_extras as string,",
				"          runs_total as string,",
				"          runs_bowler as string,",
				"          runs_not_boundary as string,",
				"          extra_type as string,",
				"          non_striker as string,",
				"          non_striker_pos as string,",
				"          wicket_kind as string,",
				"          player_out as string,",
				"          fielders as string,",
				"          runs_target as string,",
				"          review_batter as string,",
				"          team_reviewed as string,",
				"          review_decision as string,",
				"          umpire as string,",
				"          umpires_call as string,",
				"          player_of_match as string,",
				"          match_won_by as string,",
				"          win_outcome as string,",
				"          toss_winner as string,",
				"          toss_decision as string,",
				"          venue as string,",
				"          city as string,",
				"          day as string,",
				"          month as string,",
				"          year as string,",
				"          season as string,",
				"          gender as string,",
				"          team_type as string,",
				"          superover_winner as string,",
				"          result_type as string,",
				"          method as string,",
				"          balls_per_over as string,",
				"          overs as string,",
				"          event_match_no as string,",
				"          stage as string,",
				"          match_number as string,",
				"          team_runs as string,",
				"          team_balls as string,",
				"          team_wicket as string,",
				"          new_batter as string,",
				"          batter_runs as string,",
				"          batter_balls as string,",
				"          bowler_wicket as string,",
				"          batting_partners as string,",
				"          next_batter as string,",
				"          striker_out as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> InsertSink",
				"UpdateCond sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Prop_0 as string,",
				"          match_id as string,",
				"          date as string,",
				"          match_type as string,",
				"          event_name as string,",
				"          innings as string,",
				"          batting_team as string,",
				"          bowling_team as string,",
				"          over as string,",
				"          ball as string,",
				"          ball_no as string,",
				"          batter as string,",
				"          bat_pos as string,",
				"          runs_batter as string,",
				"          balls_faced as string,",
				"          bowler as string,",
				"          valid_ball as string,",
				"          runs_extras as string,",
				"          runs_total as string,",
				"          runs_bowler as string,",
				"          runs_not_boundary as string,",
				"          extra_type as string,",
				"          non_striker as string,",
				"          non_striker_pos as string,",
				"          wicket_kind as string,",
				"          player_out as string,",
				"          fielders as string,",
				"          runs_target as string,",
				"          review_batter as string,",
				"          team_reviewed as string,",
				"          review_decision as string,",
				"          umpire as string,",
				"          umpires_call as string,",
				"          player_of_match as string,",
				"          match_won_by as string,",
				"          win_outcome as string,",
				"          toss_winner as string,",
				"          toss_decision as string,",
				"          venue as string,",
				"          city as string,",
				"          day as string,",
				"          month as string,",
				"          year as string,",
				"          season as string,",
				"          gender as string,",
				"          team_type as string,",
				"          superover_winner as string,",
				"          result_type as string,",
				"          method as string,",
				"          balls_per_over as string,",
				"          overs as string,",
				"          event_match_no as string,",
				"          stage as string,",
				"          match_number as string,",
				"          team_runs as string,",
				"          team_balls as string,",
				"          team_wicket as string,",
				"          new_batter as string,",
				"          batter_runs as string,",
				"          batter_balls as string,",
				"          bowler_wicket as string,",
				"          batting_partners as string,",
				"          next_batter as string,",
				"          striker_out as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> UpdateSink"
			]
		}
	}
}