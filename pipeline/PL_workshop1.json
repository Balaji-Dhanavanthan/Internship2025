{
	"name": "PL_workshop1",
	"properties": {
		"activities": [
			{
				"name": "Data flow1",
				"type": "ExecuteDataFlow",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "DF_EXL_PQT",
						"type": "DataFlowReference",
						"datasetParameters": {
							"source1": {
								"container": "test-container",
								"folder": "Workshop_source",
								"file": "BASK Invitation Dataset.xlsx",
								"sheet": 0
							},
							"sink1": {
								"container": "test-adf",
								"folder": "jeffina_folder",
								"file": "bask.parquet"
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ParquetSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "ParquetReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_Parquet",
						"type": "DatasetReference",
						"parameters": {
							"container": "test-adf",
							"folder": "jeffina_folder",
							"file": "bask.parquet"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_Blob",
						"type": "DatasetReference",
						"parameters": {
							"Container": "test-adf",
							"Folder": "jeffina_folder",
							"Filename": "bask.csv"
						}
					}
				]
			},
			{
				"name": "Copy data2",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Data flow1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "SqlServerSink",
						"preCopyScript": "DELETE FROM bask_table WHERE YEAR(Invitation_date) IN (2021, 2022);\n",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_Blob",
						"type": "DatasetReference",
						"parameters": {
							"Container": "test-adf",
							"Folder": "jeffina_folder",
							"Filename": "bask.csv"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_OnPrem_SQL",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "bask_table",
							"SchemaName": "I2025_JMeyappa",
							"DatabaseName": "Intern_2025"
						}
					}
				]
			}
		],
		"annotations": []
	}
}