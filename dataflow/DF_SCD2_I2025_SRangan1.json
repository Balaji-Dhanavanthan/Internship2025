{
	"name": "DF_SCD2_I2025_SRangan1",
	"properties": {
		"folder": {
			"name": "TDSG Day 5 Training"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Blob",
						"type": "DatasetReference"
					},
					"name": "source"
				},
				{
					"dataset": {
						"referenceName": "I2025_SRangan1",
						"type": "DatasetReference"
					},
					"name": "Target"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "I2025_SRangan1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "join1"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmployeeID as string,",
				"          Name as string,",
				"          Gender as string,",
				"          DateOfBirth as date,",
				"          Department as string,",
				"          JobTitle as string,",
				"          Salary as integer,",
				"          HireDate as date,",
				"          Address as string,",
				"          Email as string,",
				"          PhoneNumber as string,",
				"          MaritalStatus as string,",
				"          EffectiveDate as date,",
				"          EndDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source",
				"source(output(",
				"          EmployeeID as string,",
				"          Name as string,",
				"          Gender as string,",
				"          DateOfBirth as string,",
				"          Department as string,",
				"          JobTitle as string,",
				"          Salary as string,",
				"          HireDate as string,",
				"          Address as string,",
				"          Email as string,",
				"          PhoneNumber as string,",
				"          MaritalStatus as string,",
				"          EffectiveDate as string,",
				"          EndDate as string,",
				"          createBy as string,",
				"          time as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Target",
				"source derive(EmployeeID = toInteger(EmployeeID),",
				"          EndDate = toDate(EndDate, 'dd-MM-yyyy')) ~> derivedColumn1",
				"Target derive(EmployeeID = toInteger(EmployeeID),",
				"          DateOfBirth = toDate(DateOfBirth, 'yyyy-MM-dd'),",
				"          Salary = toDecimal(10,2),",
				"          HireDate = toDate(HireDate, 'yyyy-MM-dd'),",
				"          EffectiveDate = toDate(EffectiveDate, 'yyyy-MM-dd'),",
				"          EndDate = toDate(EndDate, 'yyyy-MM-dd'),",
				"          time = toDate(time, 'yyyy-MM-dd')) ~> derivedColumn2",
				"derivedColumn1, derivedColumn2 join(derivedColumn1@EmployeeID == derivedColumn2@EmployeeID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 derive(createBy = 'I2025_SRangan1',",
				"          time = currentTimestamp()) ~> derivedColumn3",
				"derivedColumn3 select(mapColumn(",
				"          EmployeeID = derivedColumn1@EmployeeID,",
				"          Name = source@Name,",
				"          Gender = source@Gender,",
				"          DateOfBirth = source@DateOfBirth,",
				"          Department = source@Department,",
				"          JobTitle = source@JobTitle,",
				"          Salary = source@Salary,",
				"          HireDate = source@HireDate,",
				"          Address = source@Address,",
				"          Email = source@Email,",
				"          PhoneNumber = source@PhoneNumber,",
				"          MaritalStatus = source@MaritalStatus,",
				"          EffectiveDate = source@EffectiveDate,",
				"          EndDate = derivedColumn1@EndDate,",
				"          createBy,",
				"          time",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ProductID as string,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          MakeFlag as string,",
				"          FinishedGoodsFlag as string,",
				"          Color as string,",
				"          SafetyStockLevel as string,",
				"          ReorderPoint as string,",
				"          StandardCost as string,",
				"          ListPrice as string,",
				"          Size as string,",
				"          SizeUnitMeasureCode as string,",
				"          WeightUnitMeasureCode as string,",
				"          Weight as string,",
				"          DaysToManufacture as string,",
				"          ProductLine as string,",
				"          Class as string,",
				"          Style as string,",
				"          ProductSubcategoryID as string,",
				"          ProductModelID as string,",
				"          SellStartDate as string,",
				"          SellEndDate as string,",
				"          DiscontinuedDate as string,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     partitionFileNames:['target_scd2.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}