{
	"name": "DF_ADF_MODULE_QN1",
	"properties": {
		"folder": {
			"name": "DF_ADF_Module1"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_ModuleTest1Qn1",
						"type": "DatasetReference"
					},
					"name": "SRCModuleTest1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_ModuleTest1Qn1",
						"type": "DatasetReference"
					},
					"name": "TGTAnimeYourId"
				}
			],
			"transformations": [
				{
					"name": "AbbreviationForTypeColumn"
				},
				{
					"name": "Replaced"
				},
				{
					"name": "RemoveBlank"
				},
				{
					"name": "RoundRating"
				}
			],
			"scriptLines": [
				"source(output(",
				"          anime_id as integer,",
				"          name as string,",
				"          genre as string,",
				"          type as string,",
				"          episodes as string,",
				"          rating as double,",
				"          members as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SRCModuleTest1",
				"RemoveBlank derive(type = ERROR_FUNCTION('upper(__NEW_LINE_R____NEW_LINE_N__    concat(__NEW_LINE_R____NEW_LINE_N__        substring(split(type,__SINGLE_QUOTE__ __SINGLE_QUOTE__)[0],0,1),__NEW_LINE_R____NEW_LINE_N__        iif(size(substring(split(type,__SINGLE_QUOTE__ __SINGLE_QUOTE__))>1, substring(split(type,__SINGLE_QUOTE__ __SINGLE_QUOTE__)[1], 0,1),__NEW_LINE_R____NEW_LINE_N__        __NEW_LINE_R____NEW_LINE_N__        iif(size(substring(split(type,__SINGLE_QUOTE__ __SINGLE_QUOTE__))>2,substring(split(type,__SINGLE_QUOTE__ __SINGLE_QUOTE__)[2],0,1)__NEW_LINE_R____NEW_LINE_N__    )__NEW_LINE_R____NEW_LINE_N__)')) ~> AbbreviationForTypeColumn",
				"SRCModuleTest1 derive(genre = replace(genre,',',':')) ~> Replaced",
				"RoundRating filter(isNull(type)) ~> RemoveBlank",
				"Replaced derive(rating = round(rating, 0.0,1)) ~> RoundRating",
				"AbbreviationForTypeColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          anime_id as string,",
				"          name as string,",
				"          genre as string,",
				"          type as string,",
				"          episodes as string,",
				"          rating as string,",
				"          members as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> TGTAnimeYourId"
			]
		}
	}
}